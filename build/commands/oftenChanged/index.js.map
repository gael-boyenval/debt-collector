{"version":3,"sources":["../lib/git/gitUtils.ts","oftenChanged/index.tsx"],"names":[],"mappings":"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","file":"index.js","sourceRoot":"../../commands","sourcesContent":["/* eslint-disable no-await-in-loop, no-restricted-syntax */\nimport path, { resolve } from 'path'\nimport simpleGit, { SimpleGit } from 'simple-git'\nimport minimatch from 'minimatch'\nimport Queue from 'queue-promise'\nimport type { GitRevision } from '../types'\n\nconst gitOptions = {\n  baseDir: process.cwd(),\n  binary: 'git',\n  maxConcurrentProcesses: 6,\n}\n\nconst git: SimpleGit = simpleGit(gitOptions)\n\nexport const getIsHistoryDirty = async (): Promise<boolean> => {\n  const status = await git.status()\n  return status.files.length > 0\n}\n\nfunction timeout(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nexport const checkoutTo = async (revision: string): Promise<void> => {\n  await git.checkout([revision])\n  // we need to make sure that file system is ready to be used, and finished the checkout\n  await timeout(1000)\n}\n\nexport const getCurrentBranch = async (): Promise<string> => {\n  const currentBranch = await git.revparse(['--abbrev-ref', 'HEAD'])\n  return currentBranch\n}\nexport const execWalkCommand = async (command: string): Promise<string> =>\n  git.raw(command.replace('git ', '').split(' '))\n\nexport const getRevList = async (\n  command: string,\n  parser: (result: string) => string[],\n  limit = 10\n): Promise<string[]> => {\n  const commandResult = await git.raw(command.replace('git ', '').split(' '))\n  const result = parser(commandResult)\n  return result.slice(0, limit)\n}\n\ntype OnCommitChange<IteratorResult> = ({\n  rev,\n  index,\n  previousResult,\n}: {\n  rev: GitRevision\n  index: number | null\n  previousResult: WalkIteratorResult<IteratorResult> | null\n}) => Promise<IteratorResult>\n\nexport type WalkIteratorResult<IteratorResult> = {\n  rev: GitRevision\n  results: IteratorResult | null\n}\n\nexport const walkCommits = async <FinalResult, IteratorResult>(\n  revList: GitRevision[],\n  {\n    onCommitChange,\n    onError,\n    onEnd,\n  }: {\n    onCommitChange: OnCommitChange<IteratorResult>\n    onEnd: (\n      result: WalkIteratorResult<IteratorResult>[]\n    ) => Promise<FinalResult>\n    onError: (error: string) => void\n  }\n): Promise<FinalResult | null> => {\n  const isHistoryDirty = await getIsHistoryDirty()\n  const currentBranch = await getCurrentBranch()\n\n  let walkIteratorResults: WalkIteratorResult<IteratorResult>[] | null = null\n\n  if (isHistoryDirty) {\n    onError('You have uncommited changes, please commit or stash them')\n    return null\n  }\n\n  try {\n    // eslint-disable-next-line\n    for (const [index, rev] of revList.entries()) {\n      await git.checkout([rev.hash])\n      const previousResult = walkIteratorResults?.[index - 1] ?? null\n\n      const results = await onCommitChange({\n        rev,\n        index,\n        previousResult,\n      })\n\n      if (!walkIteratorResults) {\n        walkIteratorResults = []\n      }\n\n      walkIteratorResults.push({\n        rev,\n        results,\n      })\n    }\n  } catch (e) {\n    onError(e.message)\n    await checkoutTo(currentBranch)\n    console.log(e)\n    return null\n  }\n\n  await checkoutTo(currentBranch)\n  const results = await onEnd(walkIteratorResults)\n  return results\n}\n\nexport const getChangedFilesSinceRev = async (\n  rev: string,\n  commonAncestor = true\n): Promise<{ status: string; filePath: string }[]> => {\n  let results\n  if (commonAncestor) {\n    // get last common commit between rev and Head\n    // avoid comparing Head with out of sync base branch\n    const commit = await git.raw(['merge-base', rev, 'HEAD'])\n    results = await git.diff([\n      commit.replace('\\n', ''),\n      '--name-status',\n      '--no-renames',\n    ])\n  } else {\n    results = await git.diff([rev, '--name-status', '--no-renames'])\n  }\n\n  const rootGitDir = await git.revparse(['--show-toplevel'])\n  const currentGitDir = path.relative(rootGitDir, process.cwd())\n\n  const changedFilesSinceRev = results\n    .replace(/\\t/g, '|')\n    .split('\\n')\n    .filter((item) => item !== '')\n    .map((item) => {\n      const [status, filePath] = item.split('|')\n\n      return {\n        status,\n        filePath: path.relative(currentGitDir, filePath),\n      }\n    })\n\n  return changedFilesSinceRev\n}\n\nconst daysFromNow = (date) => {\n  function datediff(first, second) {\n    return Math.round((second - first) / (1000 * 60 * 60 * 24))\n  }\n\n  return datediff(new Date(date), Date.now())\n}\n\nconst getFileChanges = async (file, sinceDays = 365) => {\n  let fileResult\n  try {\n    fileResult = await git.raw([\n      'log',\n      '--pretty=format:%s|%ad',\n      // `--since=\"${sinceDays} days ago\"`,\n      '--follow',\n      '-M',\n      file,\n    ])\n  } catch (err) {\n    console.log(err)\n\n    return null\n  }\n\n  const changes = fileResult.split('\\n').filter((commit) => commit !== '')\n  const lastModified = changes[0].split('|')[1]\n  const firstCommitDate = changes.reverse()[0].split('|')[1]\n  const changesSince = changes.filter((commit) => {\n    const date = commit.split('|')[1]\n    return daysFromNow(date) <= sinceDays\n  })\n\n  const sinceBaseRatio =\n    daysFromNow(firstCommitDate) >= sinceDays\n      ? 1\n      : daysFromNow(firstCommitDate) / sinceDays\n\n  const changeFrequency = changesSince.length / sinceBaseRatio\n  const bugs = changesSince.filter((change) => change.includes(':bug:'))\n  const bugFrequency = bugs.length / sinceBaseRatio\n\n  return {\n    file,\n    changes: changesSince.length,\n    bugs: bugs.length,\n    changeFrequency,\n    bugFrequency,\n    creationDate: daysFromNow(firstCommitDate),\n    lastModified: daysFromNow(lastModified),\n  }\n}\n\nexport const getMostModifiedFiles = async (): Promise<{\n  [file: string]: {\n    changes: number\n    bugs: number\n    changeFrequency: number\n    bugFrequency: number\n  }\n}> =>\n  new Promise((resolve, reject) => {\n    console.log('new algo')\n    git\n      .raw(['ls-tree', 'next', '-r', '--name-only'])\n      .then((allTrackedFiles) => {\n        const formated = allTrackedFiles\n          .split('\\n')\n          .filter((file) => file !== '')\n          .filter((file) =>\n            minimatch(file, 'packages/app-one-catalog/src/redux/**/*')\n          )\n\n        const queue = new Queue({\n          concurrent: 100,\n          interval: 0,\n        })\n\n        const results = []\n        const count = 0\n\n        const formatedlength = formated.length\n\n        if (formated.length === 0) {\n          resolve([])\n        }\n\n        queue.enqueue(formated.map((file) => () => getFileChanges(file)))\n\n        queue.on('resolve', (data) => {\n          count += 1\n          console.log(`${count} / ${formatedlength}`)\n\n          if (data) results.push(data)\n          if (!data) console.log('a file failed')\n        })\n\n        queue.on('end', () => {\n          const formatResults = results\n            .sort((file1, file2) => {\n              if (file1.changes > file2.changes) return -1\n              if (file1.changes < file2.changes) return 1\n              return 0\n            })\n            .slice(0, 300)\n            .reduce((acc, item) => {\n              acc[item.file] = {\n                changes: item.changes,\n                bugs: item.bugs,\n                changeFrequency: item.changeFrequency,\n                bugFrequency: item.bugFrequency,\n                creationDate: item.creationDate,\n                lastModified: item.lastModified,\n              }\n\n              return acc\n            }, {})\n          console.log(formatResults)\n          resolve(formatResults)\n        })\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n\n    // const formated = files\n    //   .split('\\n')\n    //   .filter((file) => file !== '')\n    //   .reduce((acc, file) => {\n    //     if (!acc[file]) {\n    //       acc[file] = 1\n    //     } else {\n    //       acc[file] += 1\n    //     }\n    //     return acc\n    //   }, {})\n\n    // const sorted = Object.keys(formated).sort((file1, file2) => {\n    //   if (formated[file1] > formated[file2]) return -1\n    //   if (formated[file1] < formated[file2]) return 1\n    //   return 0\n    // })\n\n    // const sortedWithScore = sorted\n    //   .filter((file) => minimatch(file, 'packages/*/src/**/*'))\n    //   .filter((file) => fs.existsSync(file))\n    //   .slice(0, 350)\n    //   .reduce((acc, file) => {\n    //     const lib = file.split('/')[1]\n    //     const relativefileName = file.replace(`packages/${lib}`, '')\n\n    //     if (!acc[lib]) {\n    //       acc[lib] = {}\n    //     }\n\n    //     acc[lib][relativefileName] = formated[file]\n    //     return acc\n    //   }, {})\n\n    // console.log(formated)\n\n    // return formated\n  })\n","import React, { useEffect, useState } from 'react';\n// import PropTypes from 'prop-types';\nimport { Text } from 'ink';\nimport { getMostModifiedFiles } from '../../lib/git/gitUtils';\n\nfunction OftenChanged() {\n  const [mostModifiedFiles, setMostModifiedFiles] = useState(null)\n\n  useEffect(() => {\n    const setMost = async () => {\n      const files = await getMostModifiedFiles()\n      setMostModifiedFiles(files)\n    }\n\n    setMost()\n  }, [])\n  \n  return (\n    <Text>Hello</Text>\n  )\n}\n\nexport default OftenChanged;\n"]}