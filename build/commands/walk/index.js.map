{"version":3,"sources":["../lib/config/getConfigPath.ts","../lib/utils/truncateString.ts","../lib/utils/mergeAndDedupArrays.ts","../lib/utils/useArrayForStringKeys.ts","../lib/utils/filterIgnoredFiles.ts","../lib/utils/cleanTagFilterParam.ts","../lib/utils/getConfigRuleById.ts","../lib/utils/index.ts","../lib/config/sanitizeConfig.ts","../lib/config/validateConfig.ts","../lib/config/useValidatedConfig.ts","../lib/config/index.ts","../lib/reporters/chartTemplate.ts","../lib/reporters/buildWalkReport.ts","../lib/reporters/packagesEntriesTemplate.ts","../lib/reporters/buildWalkEntries.ts","../lib/config/getTagListFromConfig.ts","../lib/git/gitUtils.ts","../lib/git/useGitUtils.ts","../lib/git/index.ts","../lib/filters/getFilesList.ts","../lib/filters/filterRules.ts","../lib/results/getFileRulesErrors.ts","../lib/results/getEslintRulesErrors.ts","../lib/results/getFileResult.ts","../lib/results/checkFileList.ts","walk/getCommitResult.ts","walk/getEndDatesEstimations.ts","walk/index.tsx"],"names":[],"mappings":"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","file":"index.js","sourceRoot":"../../commands","sourcesContent":["import path from 'path'\n\nconst getConfigPath = (config) =>\n  config\n    ? path.relative(process.cwd(), config)\n    : path.relative(process.cwd(), './debt-collector.config.js')\n\nexport default getConfigPath\n","const truncateString = (str: string, max: number): string => {\n  if (str.length < max) return str\n  const charArr = str.split('')\n  const strStart = [...charArr].filter((_char, i) => i >= 0 && i < max / 2)\n  const strEnd = [...charArr].filter(\n    (_char, i) => i > str.length - max / 2 && i < str.length\n  )\n  return [...strStart, '....', ...strEnd].join('')\n}\n\nexport default truncateString\n","const mergeAndDedupArrays = <T>(...args: T[][]): T[] => {\n  const fusioned: T[] = args.reduce((acc, array) => acc.concat(array), [])\n  return [...new Set(fusioned)]\n}\n\nexport default mergeAndDedupArrays\n","const useArrayForStringKeys = (keys: string[], obj: any) => {\n  const returnObj = obj\n\n  keys.forEach((key) => {\n    if (returnObj[key] && typeof returnObj[key] === 'string') {\n      returnObj[key] = [returnObj[key]]\n    }\n    if (!returnObj[key]) {\n      returnObj[key] = []\n    }\n  })\n\n  return returnObj\n}\nexport default useArrayForStringKeys\n","import minimatch from 'minimatch'\n\nconst filterIgnoredFiles = (\n  files: string[],\n  ignoredFiles: string[],\n  includedFiles: string[]\n): string[] =>\n  files.filter((file) => {\n    const matchGlob = (glob: string): boolean =>\n      minimatch(file, glob.replace(/^\\.\\//, ''))\n\n    const isFileIgnored = ignoredFiles.some(matchGlob)\n    const isFileIncluded = includedFiles.some(matchGlob)\n    return !isFileIgnored && isFileIncluded\n  })\n\nexport default filterIgnoredFiles\n","type Tag = string | undefined\n\nconst cleanTagFilterParam = (tagsParam: Tag[]) =>\n  tagsParam\n    ? tagsParam?.filter((tag: string | undefined) => tag !== undefined)\n    : []\n\nexport default cleanTagFilterParam\n","import { EslintRule, FileRule, Config } from '../types'\n\nconst getConfigRuleById = (\n  config: Config,\n  id: string\n): FileRule | EslintRule => {\n  const fileRules = config.fileRules || []\n  const eslintRules = config.eslintRules || []\n  const rules = [...fileRules, ...eslintRules]\n  return rules.find((rule) => rule.id === id)\n}\n\nexport default getConfigRuleById\n","export { default as truncateString } from './truncateString'\nexport { default as mergeAndDedupArrays } from './mergeAndDedupArrays'\nexport { default as useArrayForStringKeys } from './useArrayForStringKeys'\nexport { default as filterIgnoredFiles } from './filterIgnoredFiles'\nexport { default as cleanTagFilterParam } from './cleanTagFilterParam'\nexport { default as getConfigRuleById } from './getConfigRuleById'\n","import type { ValidateConfigReturn } from './validateConfig'\nimport { useArrayForStringKeys } from '../utils'\n\nconst initialiseRules = (\n  validatedConfig: ValidateConfigReturn\n): ValidateConfigReturn => {\n  const returnValues = validatedConfig\n  const config = returnValues.sanitizedConfig\n\n  returnValues.sanitizedConfig = useArrayForStringKeys(\n    ['include', 'exclude'],\n    config\n  )\n\n  const defaultFileRuleConfig = {\n    include: '**/*',\n    matchRule: () => 1,\n  }\n\n  const defaultEslintRuleConfig = {\n    include: '**/*',\n  }\n\n  let fileRules = null\n\n  if (config.fileRules?.length > 0) {\n    fileRules = config.fileRules.map((rule) => {\n      let sanitizedRule = {\n        ...defaultFileRuleConfig,\n        ...rule,\n      }\n\n      sanitizedRule = useArrayForStringKeys(\n        ['include', 'exclude', 'tags'],\n        sanitizedRule\n      )\n\n      return sanitizedRule\n    })\n  }\n\n  let eslintRules = null\n\n  if (config.eslintRules?.length > 0) {\n    eslintRules = config.eslintRules.map((rule) => {\n      let sanitizedRule = {\n        ...defaultEslintRuleConfig,\n        ...rule,\n      }\n\n      sanitizedRule = useArrayForStringKeys(\n        ['include', 'exclude', 'tags'],\n        sanitizedRule\n      )\n\n      return sanitizedRule\n    })\n  }\n\n  if (fileRules) {\n    returnValues.sanitizedConfig.fileRules = fileRules\n  }\n\n  if (eslintRules) {\n    returnValues.sanitizedConfig.eslintRules = eslintRules\n  }\n\n  return returnValues\n}\n\nexport default initialiseRules\n","import path from 'path'\nimport { Config, UserConfig } from './config'\nimport sanitizeConfig from './sanitizeConfig'\n\nexport type ValidateConfigReturn = {\n  isConfigValid: boolean\n  sanitizedConfig: Config | null\n  configErrors: string[]\n  userConfig: UserConfig | null\n}\n\nconst validateConfig = async (configPath): Promise<ValidateConfigReturn> => {\n  let config: undefined | Config\n\n  const returnValues = {\n    isConfigValid: true,\n    sanitizedConfig: null,\n    userConfig: null,\n    configErrors: [],\n  }\n\n  try {\n    const importedConfig = await import(`${process.cwd()}/${configPath}`)\n    config = importedConfig.default\n    returnValues.sanitizedConfig = config\n    returnValues.userConfig = config\n  } catch (e) {\n    returnValues.isConfigValid = false\n    returnValues.configErrors.push(\n      `Impossible to load a valid config file at ${configPath}, create a config file or provide a path to a valid config using the \"--config\" flag`\n    )\n    return returnValues\n  }\n\n  const hasIncludeKey = !!config.include\n  const hasFileRules = !!config.fileRules\n  const hasEslintRules = !!config.eslintRules\n  const hasEslintConfigPath = !!config.eslintConfigPath\n  const hasSomeRules = hasFileRules || hasEslintRules\n\n  if (!hasIncludeKey) {\n    returnValues.isConfigValid = false\n    returnValues.configErrors.push(\n      'Provide a \"include\" key with a glob pattern in your configuration ex: \"./**/*\"'\n    )\n  }\n\n  if (!hasSomeRules) {\n    returnValues.isConfigValid = false\n    returnValues.configErrors.push(\n      'Your config does not have any rules, please create \"fileRules\" or/and \"eslintRules\"'\n    )\n  }\n\n  if (hasEslintRules && !hasEslintConfigPath) {\n    returnValues.isConfigValid = false\n    returnValues.configErrors.push(\n      'You provided \"eslintRules\" but no path to an eslint config file'\n    )\n  }\n\n  if (!hasEslintRules && hasEslintConfigPath) {\n    returnValues.isConfigValid = false\n    returnValues.configErrors.push(\n      'You provided a a path to an eslint config but no \"eslintRules\"'\n    )\n  }\n\n  // TODO : validate individual rules\n  // - unique ID\n  // - include either an include key or a matchRule\n\n  if (hasEslintConfigPath && hasEslintRules) {\n    try {\n      // eslint-disable-next-line global-require, import/no-dynamic-require\n      returnValues.sanitizedConfig.eslintConfig = require(path.resolve(\n        process.cwd(),\n        config.eslintConfigPath\n      ))\n    } catch (e) {\n      returnValues.isConfigValid = false\n      returnValues.configErrors.push(\n        'Impossible to load the eslint config file'\n      )\n    }\n  }\n\n  return sanitizeConfig(returnValues)\n}\n\nexport default validateConfig\n","import { useEffect, useState } from 'react'\nimport { UserConfig, Config } from '../types'\nimport getConfigPath from './getConfigPath'\nimport validateConfig from './validateConfig'\n\nconst useValidatedConfig = (\n  config?: string\n): {\n  isConfigValid: boolean | null\n  sanitizedConfig: Config | null\n  configErrors: string[] | null\n  userConfig: UserConfig | null\n} => {\n  const [isConfigValid, setIsConfigValid] = useState<boolean | null>(null)\n  const [sanitizedConfig, setSanitizedConfig] = useState<Config | null>(null)\n  const [configErrors, setConfigErrors] = useState<string[] | null>(null)\n  const [userConfig, setUserConfig] = useState<UserConfig | null>(null)\n\n  useEffect(() => {\n    ;(async () => {\n      const configPath = getConfigPath(config)\n      try {\n        const {\n          isConfigValid: isValid,\n          sanitizedConfig: cleanConfig,\n          configErrors: errors,\n          userConfig: baseConfig,\n        } = await validateConfig(configPath)\n\n        setUserConfig(baseConfig)\n        setSanitizedConfig(cleanConfig)\n        setIsConfigValid(isValid)\n        setConfigErrors(errors)\n      } catch (e) {\n        setIsConfigValid(false)\n        setConfigErrors([e.message])\n      }\n    })()\n  }, [])\n\n  return {\n    isConfigValid,\n    sanitizedConfig,\n    configErrors,\n    userConfig,\n  }\n}\n\nexport default useValidatedConfig\n","export { default as useValidatedConfig } from './useValidatedConfig'\n","export default (data: string) => `\n<!DOCTYPE html>\n<html>\n<head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/babel-standalone/6.14.0/babel.min.js\"></script>\n    <script type=\"text/babel\" data-presets=\"es2017, stage-3\" data-plugins=\"syntax-async-functions,transform-class-properties\"></script>\n    <script src=\"https://unpkg.com/react/umd/react.production.min.js\"></script>\n    <script src=\"https://unpkg.com/react-dom/umd/react-dom.production.min.js\"></script>\n    <script src=\"https://unpkg.com/prop-types/prop-types.min.js\"></script>\n    <script src=\"https://unpkg.com/recharts/umd/Recharts.js\"></script>\n     <style type=\"text/css\">\n      body {\n        font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n      }\n    </style>\n</head>\n<body>\n<div id=\"app\"></div>\n<script type=\"text/babel\">\n\nconst result = ${data}\nconst reportsLinks = result.reportsLinks\n\nconst { LineChart, Line, AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } = window.Recharts\n\nconst ReportDebtPaymentProjection = ({period, title}) => (\n  <div  style={{ padding: 20, flex: 1 }}>\n    <div>At an avarage rythme of <b>{Math.round(period.tendencyMonth*100)/100} points/month</b>,<br/> it would require <b>{period.daysToReachZero} days</b> to reach zero debt.<br/> Debt would be payed in full on <b>{\n      new Date(\n        period.estimatedendDate\n      ).toDateString()}</b>\n    </div>\n  </div>\n)\n\nconst parseDataBy = (key) => result.results.map((commit) => {\n\n  const rulesScores = commit.brokenRules.map(rule => ({\n    [rule.ruleId]: rule[key]\n  })).reduce((acc, res) => ({...acc, ...res}), {})\n\n  return {\n    commit,\n    ...rulesScores\n  }\n})\n\nfunction getRandomColor() {\n  var letters = '0123456789ABCDEF';\n  var color = '#';\n  for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\nfunction shadeColor(color, percent) {\n  const channel = (chan) => {\n    let colChan = parseInt(chan, 16);\n    colChan = parseInt(colChan * (100 + percent) / 100);\n    colChan = colChan < 255 ? colChan : 255;\n    colChan = colChan.toString(16).length === 1\n      ? \"0\" + colChan.toString(16)\n      : colChan.toString(16);\n    return colChan\n  }\n\n  const RR = channel(color.substring(1,3));\n  const GG = channel(color.substring(3,5));\n  const BB = channel(color.substring(5,7));\n\n  return \"#\"+RR+GG+BB;\n}\n\nconst colors = Array(100).fill('').map(() =>  shadeColor(getRandomColor(), -20))\nconst newData = parseDataBy('ruleTotalSore')\n\nconst baseButtonStyles = {\n  padding: 4,\n  textAlign: 'left',\n  marginBottom: 6,\n  marginRight: 6,\n  border: 'none',\n  outline: 'none',\n  fontWeight: 'bold',\n}\n\nconst rules = Object.keys(newData[0]).filter(key => key !== 'commit')\nconst rulesActives = rules.reduce((acc, rule) => {\n  acc[rule] = true\n  return acc\n}, {})\n\n const App = () => {\n   const [data, setData] = React.useState(newData)\n   const [valueType, setValueType] = React.useState('ruleTotalSore')\n   const [activeRules, setActiveRules] = React.useState(rulesActives)\n   const [tagFilter, setTagFilter] = React.useState(null)\n   const [chartType, setChartType] = React.useState('area')\n   const [estimationsBasedOn, setEstimationsBasedOn] = React.useState('avairage')\n\n   const toggleRule = (id) => {\n    setTagFilter(null)\n    setActiveRules(prev => ({\n      ...prev,\n      [id]: !prev[id]\n    }))\n   }\n\n   const switchDataBy = (key) => {\n      setValueType(key)\n      setData(parseDataBy(key))\n   }\n\n   const toggleAll = () => {\n     setTagFilter(null)\n     setActiveRules(prev => {\n       const rulesKeys = Object.keys(prev)\n       const firstIsActive = !!prev[rulesKeys[0]]\n       return rulesKeys.reduce((rules, rule) => {\n         rules[rule] = !firstIsActive\n         return rules\n       }, {})\n     })\n   }\n\n   const toggleTag = (tag) => {\n     if (tagFilter === null || tagFilter !== tag) {\n       setTagFilter(tag)\n     } else {\n       setTagFilter(null)\n     }\n   }\n\n   const renderTooltip = ({payload}) => {\n    if (!payload || !payload.length) { return null }\n     return <div style={{ backgroundColor: 'white', padding: 15, borderRadius: 10, boxShadow: '0 0 10px rgba(0,0,0,0.2)' }}>\n      <h4 style={{ margin: 0, marginBottom: 5}}>{payload[0].payload.commit.date}</h4>\n      <h4 style={{ margin: 0, marginBottom: 15}}>\n        Total : {payload.reduce((totalScore, {value}) => totalScore + value, 0)}\n      </h4>\n      <p style={{ margin: 0, marginBottom: 5}}>{payload[0].payload.commit.name}</p>\n      <br/>\n        {payload.reverse().map(item => (\n          <div key={item.dataKey} style={{ display: 'flex', justifyContent:'center', fontSize: 12, marginBottom: 4}}>\n            <span style={{ backgroundColor: item.color, display: 'inline-block', width: 15, height: 15, borderRadius: 3, marginRight: 7}}></span>\n            <div style={{ flex: 1, marginRight: 25}}>\n              <span>{item.name.replace(/_/g, ' ')}</span>\n            </div>\n            <span style={{ fontWeight: 'bold'}}>{item.value}</span>\n          </div>\n        ))}\n      </div>\n   }\n\n  React.useEffect(() => {\n    if (tagFilter) {\n      setActiveRules(rules => Object.keys(rules).reduce((acc, rule) => {\n        if (result.tags[tagFilter].includes(rule)) {\n          acc[rule] = true\n        } else {\n          acc[rule] = false\n        }\n        return acc\n      }, {}))\n    }\n  }, [tagFilter])\n\n   return (\n     <React.Fragment>\n     {reportsLinks.length > 0 && (\n      <ul style={{ listStyle: 'none', display: 'flex' }}>\n        {reportsLinks.map(({ name, link }) => (\n          <li style={{ listStyle: 'none', marginRight: 10 }} key={link}>\n            <a\n              style={{\n                padding: '5px 10px',\n                textDecoration: 'none',\n                backgroundColor: '#F5F5F5',\n                fontWeight: 'bold',\n                color: '#000',\n                fontSize: 12,\n                textTransform: 'uppercase'\n              }}\n              href={link}\n            >\n              {name}\n            </a>\n          </li>\n        ))}\n      </ul>\n    )}\n      <div style={{display: 'flex', overflow: 'hidden', width: '100vw', height:'80vh'}}>\n        <div style={{width: '80vw', height:'80vh'}}>\n          <div style={{height:40, paddingLeft: 40}}>\n            <button\n                onClick={() => setChartType('area')}\n                style={{\n                  ...baseButtonStyles,\n                  backgroundColor: chartType === 'area' ? 'green' : '#F5F5F5',\n                  color: chartType === 'area' ? 'white' : 'grey'\n                }}\n              >\n                AREA CHART\n              </button>\n              <button\n                onClick={() => setChartType('line')}\n                style={{\n                  ...baseButtonStyles,\n                  backgroundColor: chartType === 'line' ? 'green' : '#F5F5F5',\n                  color: chartType === 'line' ? 'white' : 'grey'\n                }}\n              >\n                LINE CHART\n              </button>\n          </div>\n          {chartType === 'area' &&\n          <ResponsiveContainer width=\"100%\" height=\"90%\">\n            <AreaChart\n              width={500}\n              height={400}\n              data={data}\n              margin={{\n                top: 10,\n                right: 30,\n                left: 0,\n                bottom: 0,\n              }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"commit\" />\n              <YAxis />\n              <Tooltip\n                content={renderTooltip}\n                itemStyle={{fontSize: 10, fontWeight: 'bold', fontFamily: 'sans-serif', height: 10, padding: 3}}\n                labelStyle={{fontSize: 16, fontWeight: 'bold', fontFamily: 'sans-serif'}}\n              />\n              {Object.keys(activeRules).map((rule, index) => activeRules[rule] &&\n                <Area\n                  type=\"monotone\"\n                  dataKey={rule}\n                  stackId=\"1\"\n                  stroke={colors[Object.keys(activeRules).indexOf(rule)]}\n                  fill={colors[Object.keys(activeRules).indexOf(rule)]} />\n              )}\n            </AreaChart>\n          </ResponsiveContainer>\n          }\n          {chartType === 'line' &&\n          <ResponsiveContainer width=\"100%\" height=\"90%\">\n            <LineChart\n              width={500}\n              height={400}\n              data={data}\n              margin={{\n                top: 10,\n                right: 30,\n                left: 0,\n                bottom: 0,\n              }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"commit\" />\n              <YAxis />\n              <Tooltip\n                content={renderTooltip}\n                itemStyle={{fontSize: 10, fontWeight: 'bold', fontFamily: 'sans-serif', height: 10, padding: 3}}\n                labelStyle={{fontSize: 16, fontWeight: 'bold', fontFamily: 'sans-serif'}}\n              />\n              {Object.keys(activeRules).map((rule, index) => activeRules[rule] &&\n                <Line\n                  type=\"monotone\"\n                  dataKey={rule}\n                  stackId=\"1\"\n                  stroke={colors[Object.keys(activeRules).indexOf(rule)]}\n                  fill={colors[Object.keys(activeRules).indexOf(rule)]} />\n              )}\n            </LineChart>\n          </ResponsiveContainer>\n          }\n          </div>\n\n\n          <div style={{width: '20vw', minWidth: 400, height:'80vh', overflowY: 'auto', padding: 20}}>\n            <h3>Rules</h3>\n            {Object.keys(activeRules).map(rule =>\n              <button\n                key={rule}\n                onClick={() => toggleRule(rule)}\n                style={{\n                  ...baseButtonStyles,\n                  backgroundColor: activeRules[rule] ? 'green' : '#F5F5F5',\n                  color: activeRules[rule] ? 'white' : 'grey'\n                }}\n              >\n                {rule}\n              </button>\n            )}\n            <div style={{ marginTop: 15 }}>\n              <button onClick={() => toggleAll()}>TOGGLE ALL RULES</button>\n            </div>\n            <hr />\n            <h3>Tags</h3>\n            {Object.keys(result.tags).map(tag =>\n              <button\n                key={tag}\n                onClick={() => toggleTag(tag)}\n                style={{\n                  ...baseButtonStyles,\n                  display: 'inline-block',\n                  backgroundColor: tagFilter === tag ? 'green' : '#F5F5F5',\n                  color: tagFilter === tag ? 'white' : 'grey'\n                }}\n              >\n                {tag}\n              </button>\n            )}\n            <hr />\n            <h3>Display values</h3>\n            <button\n              onClick={() => switchDataBy('ruleTotalSore')}\n              style={{\n                ...baseButtonStyles,\n                display: 'inline-block',\n                backgroundColor: valueType === 'ruleTotalSore' ? 'green' : '#F5F5F5',\n                color: valueType === 'ruleTotalSore' ? 'white' : 'grey'\n              }}>\n                BY SCORE\n            </button>\n            <button\n              onClick={() => switchDataBy('occurences')}\n              style={{\n                ...baseButtonStyles,\n                display: 'inline-block',\n                backgroundColor: valueType === 'occurences' ? 'green' : '#F5F5F5',\n                color: valueType === 'occurences' ? 'white' : 'grey'\n              }}>\n                BY OCCURENCES\n            </button>\n            <hr />\n          </div>\n        </div>\n        <div style={{textAlign: 'center', maxWidth: 1600, margin: '0 auto'}}>\n          <hr />\n            <button\n              onClick={() => setEstimationsBasedOn('avairage')}\n              style={{\n                ...baseButtonStyles,\n                display: 'inline-block',\n                backgroundColor: estimationsBasedOn === 'avairage' ? 'green' : '#F5F5F5',\n                color: estimationsBasedOn === 'avairage' ? 'white' : 'grey'\n              }}>\n                AVERAGE ALL PERIODS\n            </button>\n            <button\n              onClick={() => setEstimationsBasedOn('lastPeriod')}\n              style={{\n                ...baseButtonStyles,\n                display: 'inline-block',\n                backgroundColor: estimationsBasedOn === 'lastPeriod' ? 'green' : '#F5F5F5',\n                color: estimationsBasedOn === 'lastPeriod' ? 'white' : 'grey'\n              }}>\n                LAST PERDIOD\n            </button>\n\n          <h2 style={{margin: 0, marginTop: 30}}>Current score : {result.enDateEstimlations.global.currentScore}</h2>\n          <h3 style={{margin: 0}}>Estimated date for full reimbursment:</h3>\n          <div style={{display: 'flex'}}>\n            <ReportDebtPaymentProjection period={result.enDateEstimlations.global[estimationsBasedOn]}/>\n          </div>\n          <div style={{textAlign: 'right', marginBottom: 200}}>\n            <table width=\"100%\" style={{textAlign: 'right', marginBottom: 200}}>\n              <thead>\n                <tr>\n                  <th style={{textAlign: 'left'}}>Rule ID</th>\n                  <th>Current score</th>\n                  <th>Debt points/month</th>\n                  <th>Days remaining to zero</th>\n                  <th>Estimated date to zero</th>\n                </tr>\n              </thead>\n              <tbody>\n                {Object.keys(result.enDateEstimlations.rules).map(ruleId => {\n                  const {\n                    tendencyMonth,\n                    daysToReachZero,\n                    estimatedendDate\n                  } = result.enDateEstimlations.rules[ruleId][estimationsBasedOn]\n                  const {currentScore} = result.enDateEstimlations.rules[ruleId]\n                  return (\n                    <tr key={ruleId} style={{color: tendencyMonth >= 0 ? 'red' : '#222'}}>\n                      <td style={{textAlign: 'left'}}>{ruleId}</td>\n                      <td>{currentScore} points</td>\n                      <td>{Math.round(tendencyMonth*100)/100} points/month</td>\n                      <td>{daysToReachZero ? daysToReachZero + ' days' : 'never'} </td>\n                      <td>{estimatedendDate === 'never' ? estimatedendDate : new Date(estimatedendDate).toDateString()}</td>\n                    </tr>\n                  )\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n}\n\nReactDOM.render(<App/>, document.getElementById('app'));\n</script>\n</body>\n</html>\n`\n","import fs from 'fs'\nimport template from './chartTemplate'\n\nconst cachePath = `${process.cwd()}/node_modules/.cache/debt-collector`\n\nconst buildWalkReport = (\n  userConfig,\n  tags,\n  results,\n  enDateEstimlations,\n  reportName,\n  reportsLinks\n) => {\n  setTimeout(() => {\n    // waiting for file system to correctly switch all files after checkout\n    const resultPath = `${cachePath}/report-${reportName}.html`\n    const jsonResults = JSON.stringify(\n      {\n        initialConfig: userConfig,\n        reportsLinks,\n        tags,\n        results,\n        enDateEstimlations,\n      },\n      null,\n      2\n    )\n\n    const data = template(jsonResults)\n\n    fs.mkdir(cachePath, { recursive: true }, (err) => {\n      if (err) throw err\n      fs.writeFileSync(resultPath, data)\n    })\n  }, 330)\n}\n\nexport default buildWalkReport\n","export default (data: string) => `\n<!DOCTYPE html>\n<html>\n<head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/babel-standalone/6.14.0/babel.min.js\"></script>\n    <script type=\"text/babel\" data-presets=\"es2017, stage-3\" data-plugins=\"syntax-async-functions,transform-class-properties\"></script>\n    <script src=\"https://unpkg.com/react/umd/react.production.min.js\"></script>\n    <script src=\"https://unpkg.com/react-dom/umd/react-dom.production.min.js\"></script>\n    <script src=\"https://unpkg.com/prop-types/prop-types.min.js\"></script>\n     <style type=\"text/css\">\n      body {\n        font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n      }\n    </style>\n</head>\n<body>\n<div id=\"app\"></div>\n<script type=\"text/babel\">\n\nconst entries = ${data}\nconst App = () => (\n    <ul style={{ listStyle: 'none', display: 'flex' }}>\n      {entries.map(({ name, link }) => (\n        <li style={{ listStyle: 'none', marginRight: 10 }} key={link}>\n          <a\n            style={{\n              padding: '5px 10px',\n              textDecoration: 'none',\n              backgroundColor: '#F5F5F5',\n              fontWeight: 'bold',\n              color: '#000',\n              fontSize: 12,\n              textTransform: 'uppercase'\n            }}\n            href={link}\n          >\n            {name}\n          </a>\n        </li>\n      ))}\n    </ul>\n  )\n\nReactDOM.render(<App/>, document.getElementById('app'));\n</script>\n</body>\n</html>\n`\n","import fs from 'fs'\nimport { spawn } from 'child_process'\nimport template from './packagesEntriesTemplate'\n\nconst cachePath = `${process.cwd()}/node_modules/.cache/debt-collector`\n\nconst buildWalkEntriesReport = (\n  reportsLinks,\n  openReport\n) => {\n  setTimeout(() => {\n    // waiting for file system to correctly switch all files after checkout\n    const resultPath = `${cachePath}/index.html`\n    const jsonResults = JSON.stringify(\n      reportsLinks,\n      null,\n      2\n    )\n\n    const data = template(jsonResults)\n\n    fs.mkdir(cachePath, { recursive: true }, (err) => {\n      if (err) throw err\n\n      fs.writeFileSync(resultPath, data)\n\n      if (openReport) {\n        try {\n          spawn('open', [resultPath])\n        } catch (e) {\n          // eslint-disable-next-line no-console\n          console.log(\n            'tried to open file but could not... it may be because we are in a virtual env'\n          )\n        }\n      }\n    })\n  }, 330)\n}\n\nexport default buildWalkEntriesReport\n","import { Config } from './config'\n\nconst getTagListFromConfig = (config: Config): { [key: string]: string[] } => {\n  const allRules = config?.eslintRules\n    ? [...config.fileRules, ...config.eslintRules]\n    : config.fileRules\n\n  const tagList = allRules.reduce((acc, rule) => {\n    rule.tags.forEach((tag) => {\n      if (!acc[tag]) {\n        acc[tag] = [rule.id]\n      }\n\n      if (acc[tag] && !acc[tag].includes(rule.id)) {\n        acc[tag].push(rule.id)\n      }\n    })\n\n    return acc\n  }, {})\n\n  return tagList\n}\n\nexport default getTagListFromConfig\n","/* eslint-disable no-await-in-loop, no-restricted-syntax */\nimport path from 'path'\nimport simpleGit, { SimpleGit } from 'simple-git'\nimport type { GitRevision } from '../types'\n\nconst gitOptions = {\n  baseDir: process.cwd(),\n  binary: 'git',\n  maxConcurrentProcesses: 6,\n}\n\nconst git: SimpleGit = simpleGit(gitOptions)\n\nexport const getIsHistoryDirty = async (): Promise<boolean> => {\n  const status = await git.status()\n  return status.files.length > 0\n}\n\nfunction timeout(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nexport const checkoutTo = async (revision: string): Promise<void> => {\n  await git.checkout([revision])\n  // we need to make sure that file system is ready to be used, and finished the checkout\n  await timeout(1000)\n}\n\nexport const getCurrentBranch = async (): Promise<string> => {\n  const currentBranch = await git.revparse(['--abbrev-ref', 'HEAD'])\n  return currentBranch\n}\nexport const execWalkCommand = async (command: string): Promise<string> =>\n  git.raw(command.replace('git ', '').split(' '))\n\nexport const getRevList = async (\n  command: string,\n  parser: (result: string) => string[],\n  limit = 10\n): Promise<string[]> => {\n  const commandResult = await git.raw(command.replace('git ', '').split(' '))\n  const result = parser(commandResult)\n  return result.slice(0, limit)\n}\n\ntype OnCommitChange<IteratorResult> = ({\n  rev,\n  index,\n  previousResult,\n}: {\n  rev: GitRevision\n  index: number | null\n  previousResult: WalkIteratorResult<IteratorResult> | null\n}) => Promise<IteratorResult>\n\nexport type WalkIteratorResult<IteratorResult> = {\n  rev: GitRevision\n  results: IteratorResult | null\n}\n\nexport const walkCommits = async <FinalResult, IteratorResult>(\n  revList: GitRevision[],\n  {\n    onCommitChange,\n    onError,\n    onEnd,\n  }: {\n    onCommitChange: OnCommitChange<IteratorResult>\n    onEnd: (\n      result: WalkIteratorResult<IteratorResult>[]\n    ) => Promise<FinalResult>\n    onError: (error: string) => void\n  }\n): Promise<FinalResult | null> => {\n  const isHistoryDirty = await getIsHistoryDirty()\n  const currentBranch = await getCurrentBranch()\n\n  let walkIteratorResults: WalkIteratorResult<IteratorResult>[] | null = null\n\n  if (isHistoryDirty) {\n    onError('You have uncommited changes, please commit or stash them')\n    return null\n  }\n\n  try {\n    // eslint-disable-next-line\n    for (const [index, rev] of revList.entries()) {\n      await git.checkout([rev.hash])\n      const previousResult = walkIteratorResults?.[index - 1] ?? null\n\n      const results = await onCommitChange({\n        rev,\n        index,\n        previousResult,\n      })\n\n      if (!walkIteratorResults) {\n        walkIteratorResults = []\n      }\n\n      walkIteratorResults.push({\n        rev,\n        results,\n      })\n    }\n  } catch (e) {\n    onError(e.message)\n    await checkoutTo(currentBranch)\n    console.log(e)\n    return null\n  }\n\n  await checkoutTo(currentBranch)\n  const results = await onEnd(walkIteratorResults)\n  return results\n}\n\nexport const getChangedFilesSinceRev = async (\n  rev: string,\n  commonAncestor = true\n): Promise<{ status: string; filePath: string }[]> => {\n  let results\n  if (commonAncestor) {\n    // get last common commit between rev and Head\n    // avoid comparing Head with out of sync base branch\n    const commit = await git.raw(['merge-base', rev, 'HEAD'])\n    results = await git.diff([\n      commit.replace('\\n', ''),\n      '--name-status',\n      '--no-renames',\n    ])\n  } else {\n    results = await git.diff([rev, '--name-status', '--no-renames'])\n  }\n\n  const rootGitDir = await git.revparse(['--show-toplevel'])\n  const currentGitDir = path.relative(rootGitDir, process.cwd())\n\n  const changedFilesSinceRev = results\n    .replace(/\\t/g, '|')\n    .split('\\n')\n    .filter((item) => item !== '')\n    .map((item) => {\n      const [status, filePath] = item.split('|')\n\n      return {\n        status,\n        filePath: path.relative(currentGitDir, filePath),\n      }\n    })\n\n  return changedFilesSinceRev\n}\n","import { useEffect, useState } from 'react'\nimport type { Config } from '../config'\nimport {\n  getIsHistoryDirty,\n  getCurrentBranch,\n  checkoutTo,\n  getRevList,\n  walkCommits,\n} from './gitUtils'\nimport type { GitRev } from '../results/results'\n\ntype GitError = {\n  errorType: 'GIT_ERROR'\n  message: string\n}\n\ntype GitUtils = {\n  isGitReady: boolean\n  currentBranch: string | null\n  isHistoryDirty: boolean | null\n  checkoutTo: (branch: string) => Promise<void> | null\n  walkCommits: typeof walkCommits\n  revList: GitRev[] | null\n  gitErrors: GitError[] | null\n}\n\nconst useGitUtils = (config: Config): GitUtils => {\n  const [isGitReady, setIsGitReady] = useState<boolean>(false)\n  const [currentBranch, setCurrentBranch] = useState<null | string>(null)\n  const [isHistoryDirty, setIsHistoryDirty] = useState<null | boolean>(null)\n  const [revList, setRevList] = useState<null | string[]>(null)\n  const [gitErrors, setGitErrors] = useState<GitError[]>([])\n\n  useEffect(() => {\n    if (config) {\n      ;(async () => {\n        try {\n          const currentBranchRes = await getCurrentBranch()\n          const isHistoryDirtyRes = await getIsHistoryDirty()\n          setCurrentBranch(currentBranchRes)\n          setIsHistoryDirty(isHistoryDirtyRes)\n\n          if (config.walkConfig?.gitCommand && config.walkConfig?.parser) {\n            const { gitCommand, parser, limit } = config.walkConfig\n            const revListRes = await getRevList(gitCommand, parser, limit)\n            setRevList(revListRes)\n          }\n\n          setIsGitReady(true)\n        } catch (e) {\n          setGitErrors(\n            gitErrors.push([\n              {\n                errorType: 'GIT_ERROR',\n                message: e.message,\n              },\n            ])\n          )\n          setIsGitReady(true)\n        }\n      })()\n    }\n  }, [config])\n\n  return {\n    isGitReady,\n    currentBranch,\n    isHistoryDirty,\n    checkoutTo,\n    revList,\n    gitErrors,\n    walkCommits,\n  }\n}\n\nexport default useGitUtils\n","export * from './gitUtils'\nexport { default as useGitUtils } from './useGitUtils'\n","import glob from 'glob'\nimport path from 'path\nimport { mergeAndDedupArrays, filterIgnoredFiles } from '../utils'\nimport { Config } from '../types'\nimport { getChangedFilesSinceRev } from '../git'\n\nconst removeDotSlash = (str: string): string => str.replace(/^\\.\\//, '')\n\nconst getFileList = async (\n  config: Config,\n  compare?: string,\n  globOption?: string,\n  commonAncestor: boolean\n): Promise<string[]> => {\n  const includedGlob = !!globOption ? [globOption] : config.include\n  \n  if (!!compare) {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const changedFiles = await getChangedFilesSinceRev(compare, commonAncestor)\n        // const ignoreDeletedfiles = changedFiles.filter(({ status }) => status === 'A' || status === 'M')\n        const allChanges = changedFiles.map((item) => item.filePath)\n        const files = filterIgnoredFiles(allChanges, config.exclude, includedGlob)\n        \n        resolve(files)\n      } catch (error) {\n        reject(error)\n      }\n    })\n  }\n\n  return new Promise((resolve, reject) => {\n    try {\n      const globOptions = { ignore: config.exclude, nodir: true }\n\n      const filesFromSource = includedGlob.map(\n        (globFilter) => glob.sync(globFilter, globOptions)\n      )\n\n      const files = mergeAndDedupArrays<string>(...filesFromSource).map(removeDotSlash)\n\n      resolve(files)\n    } catch (error) {\n      reject(error)\n    }\n  })\n}\n\nexport default getFileList","import minimatch from 'minimatch'\nimport { SanitizedFileRule, SanitizedEslintRule, Config } from '../config'\n\nconst doesMatchPath = ({ include = ['**/*'] }, file: string): boolean =>\n  include.filter((glob) =>\n    minimatch(file.replace('./', ''), glob.replace('./', ''))\n  ).length > 0\n\ntype RulesForFile = {\n  fileRules?: SanitizedFileRule[]\n  eslintRules?: SanitizedEslintRule[]\n}\n\nexport const getRulesForFile = (\n  options: Config,\n  filePath: string\n): RulesForFile => {\n  const rulesForFile: RulesForFile = {}\n\n  if (options.fileRules) {\n    rulesForFile.fileRules = options.fileRules.filter((rule) =>\n      doesMatchPath(rule, filePath)\n    )\n  }\n\n  if (options.eslintRules) {\n    rulesForFile.eslintRules = options.eslintRules.filter((rule) =>\n      doesMatchPath(rule, filePath)\n    )\n  }\n\n  return rulesForFile\n}\n\nconst filterRulesByTagAndId = (\n  rules: SanitizedFileRule[] | SanitizedEslintRule[],\n  ruleId: string,\n  tags: string[]\n) =>\n  rules\n    .filter((rule: SanitizedFileRule | SanitizedEslintRule) =>\n      ruleId ? ruleId === rule.id : true\n    )\n    .filter((rule: SanitizedFileRule | SanitizedEslintRule) =>\n      tags && tags.length > 0\n        ? tags.some((tag) => rule.tags.includes(tag))\n        : true\n    )\n\nexport const filtersRulesFromOptions = (\n  options: Config,\n  ruleId: string | null = null,\n  tags: string[] | null = null\n) => {\n  let { fileRules } = options\n  let { eslintRules } = options\n  const cleanTag = tags && tags.filter((tag) => !!tag)\n\n  if (ruleId || cleanTag?.length) {\n    fileRules = filterRulesByTagAndId(options.fileRules ?? [], ruleId, cleanTag)\n    eslintRules = filterRulesByTagAndId(\n      options.eslintRules ?? [],\n      ruleId,\n      cleanTag\n    )\n  }\n\n  return {\n    fileRules,\n    eslintRules,\n  }\n}\n","import escapeStringRegexp from 'escape-string-regexp-node'\nimport type { Config, BrokenRule } from '../types'\n\nconst findJsImportFrom =\n  (data) =>\n  (importee?: string, from?: string): 0 | 1 => {\n    const regexp = new RegExp(\n      `import [A-z0-9,\\\\s{]*${escapeStringRegexp(\n        importee\n      )}[A-z0-9,\\\\s}]* from '[A-z0-9.\\/]*${escapeStringRegexp(\n        from\n      )}[A-z0-9.\\/]*'`,\n      'gm'\n    )\n    const res = data.matchAll(regexp)\n    const resArr = Array.from(res, (m) => m[0])\n    return resArr.length > 0 ? 1 : 0\n  }\n\nconst countAll =\n  (data) =>\n  (str: string | RegExp): number => {\n    let regexp: RegExp\n\n    if (str instanceof RegExp) {\n      regexp = str\n    } else {\n      regexp = new RegExp(escapeStringRegexp(str), 'g')\n    }\n    const res = data.matchAll(regexp)\n    const resArr = Array.from(res, (m) => m[0])\n\n    return resArr.length\n  }\n\nconst findOne =\n  (data) =>\n  (str: string | RegExp): 0 | 1 => {\n    const count = countAll(data)(str)\n    return count > 0 ? 1 : 0\n  }\n\nconst findOneOf =\n  (data) =>\n  (matches: (string | RegExp)[]): 0 | 1 => {\n    let count = 0\n    let index = 0\n\n    while (count === 0 && index <= matches.length - 1) {\n      count = countAll(data)(matches[index])\n      index += 1\n    }\n\n    return count === 0 ? 0 : 1\n  }\n\n// does not work => fix\nconst countAllOf =\n  (data) =>\n  (matches: (string | RegExp)[]): number => {\n    let count = 0\n    let index = 0\n\n    while (index <= matches.length - 1) {\n      count += countAll(data)(matches[index])\n      index += 1\n    }\n\n    return count\n  }\n\nconst getFileRulesErrors = (\n  config: Config,\n  file: string,\n  data: string\n): BrokenRule[] => {\n  const utils = {\n    content: data,\n    file,\n    countAll: countAll(data),\n    findOne: findOne(data),\n    findOneOf: findOneOf(data),\n    countAllOf: countAllOf(data),\n    findJsImportFrom: findJsImportFrom(data),\n  }\n\n  return config.fileRules.reduce((acc, rule) => {\n    const nbErrors = rule.matchRule({ ...utils })\n\n    if (nbErrors > 0) {\n      acc.push({\n        ruleTitle: rule.title,\n        ruleId: rule.id,\n        occurences: nbErrors,\n      })\n    }\n    return acc\n  }, [])\n}\n\nexport default getFileRulesErrors\n","const getEslintRulesErrors = async (config, file, data, eslint) => {\n  let results\n  try {\n    results = await eslint.lintText(data, { warnIgnored: true })\n  } catch (err) {\n    results = []\n  }\n\n  const errors = results[0]?.messages\n\n  const containRuleIdMessage = (ruleId) =>\n    errors?.filter((err) => err.ruleId === ruleId).length ?? 0\n\n  const containMessageFromPlugin = (ruleId) => {\n    if (errors.length > 0) {\n      const nonNullError = errors\n        .filter((err) => err !== null && err.ruleId !== null)\n        .filter((err) => err.ruleId.startsWith(ruleId))\n\n      return nonNullError.length\n    }\n\n    return 0\n  }\n\n  const utils = {\n    containRuleIdMessage,\n    containMessageFromPlugin,\n    content: errors,\n    file,\n  }\n\n  return config.eslintRules.reduce((acc, rule) => {\n    const nbErrors = rule.matchESLintRule({ ...utils })\n\n    if (nbErrors > 0) {\n      acc.push({\n        ruleId: rule.id,\n        occurences: nbErrors,\n      })\n    }\n\n    return acc\n  }, [])\n}\n\nexport default getEslintRulesErrors\n","import fs from 'fs'\nimport { ESLint } from 'eslint'\nimport { getRulesForFile } from '../filters/filterRules'\nimport type { FileResults, BrokenRule, Config } from '../types'\nimport getfileRulesErrors from './getFileRulesErrors'\nimport getEslintRulesErrors from './getEslintRulesErrors'\nimport { truncateString, getConfigRuleById } from '../utils'\n\nconst updateResults = (\n  config: Config,\n  brokenRules: BrokenRule[],\n  fileResults,\n  ruleName\n) => {\n  const updatedFileResults = {\n    ...fileResults,\n  }\n\n  if (brokenRules.length > 0) {\n    brokenRules.forEach(({ ruleId, occurences }) => {\n      const rule = getConfigRuleById(config, ruleId)\n      const ruleTotalSore = rule.debtScore * occurences\n\n      updatedFileResults.brokenRules.push({\n        ruleTitle: rule.title,\n        ruleId,\n        occurences,\n        ruleTotalSore,\n      })\n\n      updatedFileResults.totalScore += ruleTotalSore\n    })\n  }\n  return updatedFileResults\n}\n\nconst runFileChecks = async (\n  config: Config,\n  filePath: string,\n  eslint: ESLint | null\n): Promise<FileResults> => {\n  let fileResults: FileResults = {\n    filePath,\n    fileShortPath: truncateString(filePath, 80),\n    brokenRules: [],\n    totalScore: 0,\n  }\n\n  if (config.eslintRules?.length === 0 && config.fileRules?.length === 0) {\n    return fileResults\n  }\n\n  let data = ''\n\n  try {\n    data = fs.readFileSync(filePath).toString()\n  } catch (error) {\n    // console.error(`error while reading file ${filePath} \\n ${error.message}`)\n    data = ''\n  }\n\n  if (config.fileRules?.length > 0) {\n    if (data) {\n      const fileRulesResults = getfileRulesErrors(config, filePath, data)\n      fileResults = updateResults(\n        config,\n        fileRulesResults,\n        fileResults,\n        'fileRules'\n      )\n    } else {\n      fileResults = updateResults(config, [], fileResults, 'fileRules')\n    }\n  }\n\n  if (config.eslintRules?.length > 0 && eslint) {\n    if (data) {\n      const eslintResults = await getEslintRulesErrors(\n        config,\n        filePath,\n        data,\n        eslint\n      )\n\n      fileResults = updateResults(\n        config,\n        eslintResults,\n        fileResults,\n        'eslintRules'\n      )\n    } else {\n      fileResults = updateResults(config, [], fileResults, 'eslintRules')\n    }\n  }\n\n  return fileResults\n}\n\nconst getFileResult = async (\n  config: Config,\n  file: string,\n  incrementCounter: () => void,\n  eslint: ESLint | null\n): Promise<FileResults> => {\n  const rulesForFile = getRulesForFile(config, file)\n  const fileResult = await runFileChecks(\n    {\n      ...config,\n      ...rulesForFile,\n    },\n    file,\n    eslint\n  )\n\n  incrementCounter()\n\n  return fileResult\n}\n\nexport default getFileResult\n","import Queue from 'queue-promise'\nimport { ESLint } from 'eslint'\nimport getFileResult from './getFileResult'\nimport { filtersRulesFromOptions } from '../filters/filterRules'\nimport type { FileResults, Config } from '../types'\n\nconst checkFileList = async (\n  fileList: string[],\n  config: Config,\n  rule: string,\n  tags: string[],\n  increment: () => void\n): Promise<FileResults[]> =>\n  new Promise((resolve) => {\n    const queue = new Queue({\n      concurrent: 20,\n      interval: 0,\n    })\n\n    const filteredRules = filtersRulesFromOptions(config, rule, tags)\n\n    const fileListConfig = {\n      ...config,\n      ...filteredRules,\n    }\n\n    let eslint: ESLint | null = null\n\n    if (config.eslintRules?.length > 0) {\n      eslint = new ESLint({\n        useEslintrc: false,\n        baseConfig: config.eslintConfig,\n      })\n    }\n\n    const results = []\n\n    if (fileList.length === 0) {\n      resolve(results)\n    }\n\n    queue.enqueue(\n      fileList.map(\n        (file) => () => getFileResult(fileListConfig, file, increment, eslint)\n      )\n    )\n\n    queue.on('resolve', (data) => {\n      results.push(data)\n    })\n\n    queue.on('end', () => resolve(results))\n  })\n\nexport default checkFileList\n","import fs from 'fs'\nimport path from 'path'\nimport minimatch from 'minimatch'\nimport getFilesList from '../../lib/filters/getFilesList'\nimport checkFileList from '../../lib/results/checkFileList'\nimport type {\n  Config,\n  FileResults,\n  RevisionResults,\n  GitRevision,\n  BrokenRule,\n} from '../../lib/types'\n\nexport const formatWalkResults = (\n  config: Config,\n  results: { rev: GitRevision; results: { [filePath: string]: FileResults } }[],\n  globFilter: string | string[],\n  hasPackagesConfig: boolean\n): RevisionResults[] => {\n  const { fileRules = [], eslintRules = [] } = config\n\n  const allRulesIdInConfig = [\n    ...fileRules.map((rule) => rule),\n    ...eslintRules.map((rule) => rule),\n  ]\n\n  const revisionResultsArr = results.map(({ rev, results: filesResults }) => {\n    \n    let filteredResults = filesResults\n    \n    if ( hasPackagesConfig) {\n      filteredResults = Object.keys(filesResults).filter(\n        filePath => minimatch(filePath, globFilter.replace(/^\\.\\//, ''))\n      ).reduce((acc, filePath) => {\n        acc[filePath] = filesResults[filePath]\n        return acc\n      }, {})\n    }\n    \n    let totalScore = 0\n    const rulesScores: { [ruleId: string]: BrokenRule } =\n      allRulesIdInConfig.reduce((acc, rule) => {\n        acc[rule.id] = {\n          ruleId: rule.id,\n          ruleTitle: rule.title,\n          debtScore: rule.debtScore,\n          ruleTotalSore: 0,\n          occurences: 0,\n        }\n        return acc\n      }, {})\n\n    Object.keys(filteredResults).forEach((filePath) => {\n      const fileResults = filesResults[filePath]\n\n      fileResults.brokenRules.forEach((brokenRule) => {\n        const { ruleId, occurences, ruleTotalSore } = brokenRule\n\n        rulesScores[ruleId].occurences += occurences\n        rulesScores[ruleId].ruleTotalSore += ruleTotalSore\n        totalScore += ruleTotalSore\n      })\n    })\n\n    const brokenRules = Object.values(rulesScores)    \n\n    return {\n      ...rev,\n      totalScore,\n      brokenRules,\n    }\n  })\n\n  return revisionResultsArr\n}\n\nexport type WalkLoopResult = { [filePath: string]: FileResults }\n\nexport const getCommitResult = async (\n  previousResult: WalkLoopResult | null,\n  previousHash: string | null,\n  sanitizedConfig: Config,\n  include: string\n): Promise<{ [filePath: string]: FileResults }> => {\n  // get changed files\n  const fileList = await getFilesList(sanitizedConfig, previousHash, include)\n\n  // test changed files\n  const fileResults = await checkFileList(\n    fileList,\n    sanitizedConfig,\n    null,\n    null,\n    () => null\n  )\n\n  // create an object of file results\n  let mergedResults = fileResults.reduce((acc, res) => {\n    acc[res.filePath] = res\n    return acc\n  }, {})\n\n  if (previousResult) {\n    // merging previous results with the new ones\n    mergedResults = {\n      ...previousResult,\n      ...mergedResults,\n    }\n\n    // testing for deleted, moved or rennamed files, and removing them from the results\n    mergedResults = Object.keys(mergedResults).reduce((acc, filePath) => {\n      const fileStillExist = fs.existsSync(\n        path.resolve(process.cwd(), `./${filePath}`)\n      )\n\n      if (fileStillExist) {\n        acc[filePath] = mergedResults[filePath]\n      }\n\n      return acc\n    }, {})\n  }\n\n  return mergedResults\n}\n","const getDateRulesDatas = ({ initialConfig, results }) => {\n  const allRules = [\n    ...(initialConfig.fileRules ?? []),\n    ...(initialConfig.eslintRules ?? []),\n  ].map((rule) => rule.id)\n\n  const rulesDateScoreObj = allRules.reduce((acc, ruleId) => {\n    acc[ruleId] = results.map(({ date, brokenRules }) => {\n      const rule = brokenRules.find(({ ruleId: id }) => id === ruleId)\n      const score = rule ? rule.ruleTotalSore : 0\n      return { date, score }\n    })\n    return acc\n  }, {})\n\n  const global = results.map(({ date, totalScore }) => ({\n    date,\n    score: totalScore,\n  }))\n\n  return {\n    rules: rulesDateScoreObj,\n    global,\n  }\n}\n\nconst getSpeedEstimation = (arr) => {\n  const trendCalculation = arr.reduce((acc, { date, score }) => {\n    if (!acc.prevDate && !acc.prevScore) {\n      acc.prevDate = date\n      acc.prevScore = score\n      acc.trendArr = []\n      return acc\n    }\n\n    const diff = score - acc.prevScore\n    const diffDays =\n      (new Date(date) - new Date(acc.prevDate)) / (1000 * 60 * 60 * 24)\n\n    const diffScoreByDay = diff / diffDays\n\n    acc.prevDate = date\n    acc.prevScore = score\n    acc.trendArr.push(diffScoreByDay)\n\n    return acc\n  }, {})\n\n  const addDays = (theDate, days) =>\n    new Date(theDate.getTime() + days * 24 * 60 * 60 * 1000)\n\n  const avairageTendencyDay =\n    trendCalculation.trendArr.reduce((acc, monthTrend) => acc + monthTrend, 0) /\n    trendCalculation.trendArr.length\n\n  const avairageTendencyMonth = avairageTendencyDay * 30.5\n\n  const avairageDaysToReachZero =\n    avairageTendencyMonth <= 0\n      ? Math.round(Math.abs(trendCalculation.prevScore / avairageTendencyDay))\n      : Infinity\n\n  const lastCommitDate = new Date(trendCalculation.prevDate)\n\n  const avairageEndDebtDate =\n    avairageTendencyDay >= 0\n      ? 'never'\n      : addDays(new Date(lastCommitDate), avairageDaysToReachZero)\n\n  const lastPeriodTendencyDay =\n    trendCalculation.trendArr[trendCalculation.trendArr.length - 1]\n\n  const lastPeriodDaysToReachZero =\n    lastPeriodTendencyDay <= 0\n      ? Math.round(Math.abs(trendCalculation.prevScore / lastPeriodTendencyDay))\n      : Infinity\n\n  const lastPeriodEndDebtDate =\n    lastPeriodTendencyDay >= 0\n      ? 'never'\n      : addDays(new Date(lastCommitDate), lastPeriodDaysToReachZero)\n\n  return {\n    currentScore: trendCalculation.prevScore,\n    avairage: {\n      tendencyDay: avairageTendencyDay,\n      tendencyMonth: avairageTendencyMonth,\n      daysToReachZero: avairageDaysToReachZero,\n      estimatedendDate: avairageEndDebtDate,\n    },\n    lastPeriod: {\n      tendencyDay: lastPeriodTendencyDay,\n      tendencyMonth: lastPeriodTendencyDay * 30.5,\n      daysToReachZero: lastPeriodDaysToReachZero,\n      estimatedendDate: lastPeriodEndDebtDate,\n    },\n  }\n}\n\nconst getEndDatesEstimations = (results) => {\n  const resultRuleDatas = getDateRulesDatas(results)\n  const endDateEstimation = {}\n\n  endDateEstimation.rules = Object.keys(resultRuleDatas.rules).reduce(\n    (acc, key) => {\n      acc[key] = getSpeedEstimation(resultRuleDatas.rules[key])\n      return acc\n    },\n    {}\n  )\n\n  endDateEstimation.global = getSpeedEstimation(resultRuleDatas.global)\n\n  return endDateEstimation\n}\n\nexport default getEndDatesEstimations\n","/* eslint-disable react/require-default-props */\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { TaskList, Task } from 'ink-task-list';\nimport { Text } from 'ink';\n\nimport { useValidatedConfig } from '../../lib/config';\nimport buildWalkReport from '../../lib/reporters/buildWalkReport';\nimport buildWalkEntries from '../../lib/reporters/buildWalkEntries';\nimport getTagListFromConfig from '../../lib/config/getTagListFromConfig';\nimport { useGitUtils, WalkIteratorResult } from '../../lib/git';\n\nimport { getCommitResult, formatWalkResults, WalkLoopResult } from './getCommitResult';\n\nimport type { RevisionResults } from '../../lib/types'\nimport getEndDatesEstimations from './getEndDatesEstimations';\n\n\nconst useTaskList = ({isConfigValid, isReady, isHistoryDirty, isFinished, revlength, currentCommit, isGitReady}) => {\n  const checkGitHistoryState = (() => {\n    if (!isGitReady) return 'loading'\n    if (isGitReady && !isHistoryDirty) return 'success'\n    if (isGitReady && isHistoryDirty) return 'error'\n    return 'pending'\n  })()\n  \n  const checkGitHistory = {\n    state: checkGitHistoryState,\n    label: 'check git history',\n    status: checkGitHistoryState === 'loading' ? 'checking git history': checkGitHistoryState,\n  }\n\n  const configTaskState = (() => {\n    if (isConfigValid === null) return 'loading'\n    if (isConfigValid && !isHistoryDirty) return 'success'\n    if (!isConfigValid || isHistoryDirty) return 'error'\n    return 'pending'\n  })()\n  \n  const configTask = {\n    state: configTaskState,\n    label: 'load and validate configuration',\n    status: configTaskState === 'loading' ? 'validating configuration' : configTaskState\n  }\n\n  const walkTaskState = (() => {\n    if (!isReady && configTaskState === 'success') return 'loading'\n    if (isReady && !isHistoryDirty) return 'success'\n    if (isHistoryDirty) return 'error'\n    return 'pending'\n  })()\n  \n  const walkTask = {\n    state: walkTaskState,\n    label: `checking the last ${revlength} commits`,\n    status: walkTaskState === 'loading' \n      ? `checking commit ${currentCommit.index}/${revlength} : ${currentCommit.commit}`\n      : walkTaskState\n  }\n\n  const reportTaskState = (() => {\n    if (walkTaskState !== 'success' && walkTaskState !== 'error') return 'pending'\n    if (walkTaskState === 'success' && !isFinished) return 'loading'\n    if (walkTaskState === 'success' && isFinished) return 'success'\n    return 'error'\n  })()\n  \n  const reportTask = {\n    state: reportTaskState,\n    label: `build a report`,\n    status: reportTaskState === 'loading' \n      ? `building html report`\n      : walkTaskState\n  }\n\n  return [\n    checkGitHistory,\n    configTask,\n    walkTask,\n    reportTask,\n  ]\n}\n\nfunction Walk({\n  config,\n  include = null,\n  openReport = false\n}) {\n  const [results, setResults] = useState({});\n  const [currentCommit, setCurrentCommit] = useState({ commit: '', index: 0 });\n  const [isReady, setIsReady] = useState(false);\n  const [tags, setTags] = useState({});\n  const [isFinished, setIsFinished] = useState(false);\n\n  const {\n    isConfigValid,\n    sanitizedConfig,\n    userConfig,\n  } = useValidatedConfig(config);\n  \n  const { isGitReady, walkCommits, checkoutTo, currentBranch, revList, isHistoryDirty } = useGitUtils(sanitizedConfig);\n  const revlength = isConfigValid && sanitizedConfig?.walkConfig?.limit ? sanitizedConfig.walkConfig.limit : '?'\n  const tasks = useTaskList({isConfigValid, isReady, isHistoryDirty, isFinished, revlength, currentCommit, isGitReady})\n\n  useEffect(() => {\n    (async () => {\n      if (isConfigValid && isGitReady && !isHistoryDirty) {\n        setTags(getTagListFromConfig(sanitizedConfig));        \n        const walkResults = await walkCommits<RevisionResults, WalkLoopResult>(revList.reverse(), {\n          onCommitChange: async ({ rev, index, previousResult }) => {\n            setCurrentCommit({ commit: rev.name, index: index + 1 })\n\n            const result = await getCommitResult(\n              previousResult?.results,\n              previousResult?.rev?.hash,\n              sanitizedConfig,\n              include\n            );\n\n            return result\n          },\n          onError: (error) => {\n            console.log(error);\n          },\n          onEnd: async (results: WalkIteratorResult<WalkLoopResult>[])=> {\n            await checkoutTo(currentBranch);\n            return results;\n          },\n        });\n\n        setResults(walkResults);\n        setIsReady(true);\n      }\n    })();\n  }, [isConfigValid, isGitReady, isHistoryDirty]);\n\n  useEffect(() => {\n    (async () => {\n      if (isReady) {\n        const hasPackagesConfig = isConfigValid && !!sanitizedConfig?.walkConfig?.report?.packages\n        \n        const reports = hasPackagesConfig \n          ? sanitizedConfig.walkConfig.report.packages\n          : { global: sanitizedConfig.include }\n        \n        const reportsLinks = Object.keys(reports).map(\n          report => ({name: report, link: `./report-${report}.html`})\n        )\n\n        Object.keys(reports).forEach(reportName => {\n          const formatedResult = formatWalkResults(sanitizedConfig, results, reports[reportName], hasPackagesConfig);\n          const endDateEstimations = getEndDatesEstimations({ initialConfig: userConfig, results: formatedResult })\n          buildWalkReport(userConfig, tags, formatedResult, endDateEstimations, reportName, reportsLinks);\n        })\n\n        buildWalkEntries(reportsLinks, openReport)\n\n        setIsFinished(true);\n      }\n    })();\n  }, [isReady]);\n\n  return (\n    <>\n    <TaskList>\n      {tasks.map(task => (\n        <Task\n          key={task.label}\n          state={task.state}\n          label={task.label}\n          status={task.status}\n        />\n      ))}\n    </TaskList>\n    {isHistoryDirty && <Text color=\"red\">Your have uncommited changes, please commit or stash them</Text>}\n    </>\n  );\n}\n\nWalk.propTypes = {\n  config: PropTypes.string,\n  include: PropTypes.string,\n  openReport: PropTypes.bool\n};\n\nWalk.shortFlags = {\n  config: 'c',\n  include: 'f',\n};\n\nexport default Walk;\n"]}