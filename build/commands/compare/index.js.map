{"version":3,"sources":["../lib/utils/truncateString.ts","../lib/utils/mergeAndDedupArrays.ts","../lib/utils/useArrayForStringKeys.ts","../lib/utils/filterIgnoredFiles.ts","../lib/utils/cleanTagFilterParam.ts","../lib/utils/getConfigRuleById.ts","../lib/utils/index.ts","../lib/git/gitUtils.ts","../lib/git/useGitUtils.ts","../lib/git/index.ts","../lib/filters/getFilesList.ts","../lib/filters/filterRules.ts","../lib/results/getFileRulesErrors.ts","../lib/results/getEslintRulesErrors.ts","../lib/results/getFileResult.ts","../lib/results/checkFileList.ts","../lib/reporters/compareMarkdownReport.ts","../components/ResultReporter.tsx","../lib/config/getConfigPath.ts","../lib/config/sanitizeConfig.ts","../lib/config/validateConfig.ts","../lib/config/useValidatedConfig.ts","compare/index.tsx"],"names":[],"mappings":"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","file":"index.js","sourceRoot":"../../commands","sourcesContent":["const truncateString = (str: string, max: number): string => {\n  if (str.length < max) return str\n  const charArr = str.split('')\n  const strStart = [...charArr].filter((_char, i) => i >= 0 && i < max / 2)\n  const strEnd = [...charArr].filter(\n    (_char, i) => i > str.length - max / 2 && i < str.length\n  )\n  return [...strStart, '....', ...strEnd].join('')\n}\n\nexport default truncateString\n","const mergeAndDedupArrays = <T>(...args: T[][]): T[] => {\n  const fusioned: T[] = args.reduce((acc, array) => acc.concat(array), [])\n  return [...new Set(fusioned)]\n}\n\nexport default mergeAndDedupArrays\n","const useArrayForStringKeys = (keys: string[], obj: any) => {\n  const returnObj = obj\n\n  keys.forEach((key) => {\n    if (returnObj[key] && typeof returnObj[key] === 'string') {\n      returnObj[key] = [returnObj[key]]\n    }\n    if (!returnObj[key]) {\n      returnObj[key] = []\n    }\n  })\n\n  return returnObj\n}\nexport default useArrayForStringKeys\n","import minimatch from 'minimatch'\n\nconst filterIgnoredFiles = (\n  files: string[],\n  ignoredFiles: string[],\n  includedFiles: string[]\n): string[] =>\n  files.filter((file) => {\n    const matchGlob = (glob: string): boolean =>\n      minimatch(file, glob.replace(/^\\.\\//, ''))\n\n    const isFileIgnored = ignoredFiles.some(matchGlob)\n    const isFileIncluded = includedFiles.some(matchGlob)\n    return !isFileIgnored && isFileIncluded\n  })\n\nexport default filterIgnoredFiles\n","type Tag = string | undefined\n\nconst cleanTagFilterParam = (tagsParam: Tag[]) =>\n  tagsParam\n    ? tagsParam?.filter((tag: string | undefined) => tag !== undefined)\n    : []\n\nexport default cleanTagFilterParam\n","import { EslintRule, FileRule, Config } from '../types'\n\nconst getConfigRuleById = (\n  config: Config,\n  id: string\n): FileRule | EslintRule => {\n  const fileRules = config.fileRules || []\n  const eslintRules = config.eslintRules || []\n  const rules = [...fileRules, ...eslintRules]\n  return rules.find((rule) => rule.id === id)\n}\n\nexport default getConfigRuleById\n","export { default as truncateString } from './truncateString'\nexport { default as mergeAndDedupArrays } from './mergeAndDedupArrays'\nexport { default as useArrayForStringKeys } from './useArrayForStringKeys'\nexport { default as filterIgnoredFiles } from './filterIgnoredFiles'\nexport { default as cleanTagFilterParam } from './cleanTagFilterParam'\nexport { default as getConfigRuleById } from './getConfigRuleById'\n","/* eslint-disable no-await-in-loop, no-restricted-syntax */\nimport path from 'path'\nimport simpleGit, { SimpleGit } from 'simple-git'\nimport type { GitRevision, RevisionResults } from '../types'\n\nconst gitOptions = {\n  baseDir: process.cwd(),\n  binary: 'git',\n  maxConcurrentProcesses: 6,\n}\n\nconst git: SimpleGit = simpleGit(gitOptions)\n\nexport const getIsHistoryDirty = async (): Promise<boolean> => {\n  const status = await git.status()\n  return status.files.length > 0\n}\n\nfunction timeout(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nexport const checkoutTo = async (revision: string): Promise<void> => {\n  await git.checkout([revision])\n  // we need to make sure that file system is ready to be used, and finished the checkout\n  await timeout(1000)\n}\n\nexport const getCurrentBranch = async (): Promise<string> => {\n  const currentBranch = await git.revparse(['--abbrev-ref', 'HEAD'])\n  return currentBranch\n}\nexport const execWalkCommand = async (command: string): Promise<string> =>\n  git.raw(command.replace('git ', '').split(' '))\n\nexport const getRevList = async (\n  command: string,\n  parser: (result: string) => string[],\n  limit = 10\n): Promise<string[]> => {\n  const commandResult = await git.raw(command.replace('git ', '').split(' '))\n  const result = parser(commandResult)\n  return result.slice(0, limit)\n}\n\ntype OnCommitChange<IteratorResult> = ({\n  rev,\n  index,\n  previousResult,\n}: {\n  rev: GitRevision\n  index: number | null\n  previousResult: WalkIteratorResult<IteratorResult> | null\n}) => Promise<IteratorResult>\n\nexport type WalkIteratorResult<IteratorResult> = {\n  rev: GitRevision\n  results: IteratorResult | null\n}\n\nexport const walkCommits = async <FinalResult, IteratorResult>(\n  revList: GitRevision[],\n  {\n    onCommitChange,\n    onError,\n    onEnd,\n  }: {\n    onCommitChange: OnCommitChange<IteratorResult>\n    onEnd: (\n      result: WalkIteratorResult<IteratorResult>[]\n    ) => Promise<FinalResult>\n    onError: (error: string) => void\n  }\n): Promise<FinalResult | null> => {\n  const isHistoryDirty = await getIsHistoryDirty()\n  const currentBranch = await getCurrentBranch()\n  let walkIteratorResults: WalkIteratorResult<IteratorResult>[] | null = null\n\n  if (isHistoryDirty) {\n    onError('You have uncommited changes, please commit or stash them')\n    return null\n  }\n\n  try {\n    // eslint-disable-next-line\n    for (const [index, rev] of revList.entries()) {\n      await git.checkout([rev.hash])\n      const previousResult = walkIteratorResults?.[index - 1] ?? null\n\n      const results = await onCommitChange({\n        rev,\n        index,\n        previousResult,\n      })\n\n      if (!walkIteratorResults) {\n        walkIteratorResults = []\n      }\n\n      walkIteratorResults.push({\n        rev,\n        results,\n      })\n    }\n  } catch (e) {\n    onError(e.message)\n    await checkoutTo(currentBranch)\n    console.log(e)\n    return null\n  }\n\n  await checkoutTo(currentBranch)\n  const results = await onEnd(walkIteratorResults)\n  return results\n}\n\nexport const getChangedFilesSinceRev = async (\n  rev: string\n): Promise<{ status: string; filePath: string }[]> => {\n  const results = await git.diff([rev, '--name-status'])\n  const rootGitDir = await git.revparse(['--show-toplevel'])\n  const currentGitDir = path.relative(rootGitDir, process.cwd())\n\n  const changedFilesSinceRev = results\n    .replace(/\\t/g, '|')\n    .split('\\n')\n    .filter((item) => item !== '')\n    .map((item) => {\n      const [status, filePath] = item.split('|')\n\n      return {\n        status,\n        filePath: path.relative(currentGitDir, filePath),\n      }\n    })\n\n  return changedFilesSinceRev\n}\n","import { useEffect, useState } from 'react'\nimport type { Config } from '../config'\nimport {\n  getIsHistoryDirty,\n  getCurrentBranch,\n  checkoutTo,\n  getRevList,\n  walkCommits,\n} from './gitUtils'\nimport type { GitRev } from '../results/results'\n\ntype GitError = {\n  errorType: 'GIT_ERROR'\n  message: string\n}\n\ntype GitUtils = {\n  isGitReady: boolean\n  currentBranch: string | null\n  isHistoryDirty: boolean | null\n  checkoutTo: (branch: string) => Promise<void> | null\n  walkCommits: typeof walkCommits\n  revList: GitRev[] | null\n  gitErrors: GitError[] | null\n}\n\nconst useGitUtils = (config: Config): GitUtils => {\n  const [isGitReady, setIsGitReady] = useState<boolean>(false)\n  const [currentBranch, setCurrentBranch] = useState<null | string>(null)\n  const [isHistoryDirty, setIsHistoryDirty] = useState<null | boolean>(null)\n  const [revList, setRevList] = useState<null | string[]>(null)\n  const [gitErrors, setGitErrors] = useState<GitError[]>([])\n\n  useEffect(() => {\n    if (config) {\n      ;(async () => {\n        try {\n          const currentBranchRes = await getCurrentBranch()\n          const isHistoryDirtyRes = await getIsHistoryDirty()\n          setCurrentBranch(currentBranchRes)\n          setIsHistoryDirty(isHistoryDirtyRes)\n\n          if (config.walkConfig?.gitCommand && config.walkConfig?.parser) {\n            const { gitCommand, parser, limit } = config.walkConfig\n            const revListRes = await getRevList(gitCommand, parser, limit)\n            setRevList(revListRes)\n          }\n\n          setIsGitReady(true)\n        } catch (e) {\n          setGitErrors(\n            gitErrors.push([\n              {\n                errorType: 'GIT_ERROR',\n                message: e.message,\n              },\n            ])\n          )\n          setIsGitReady(true)\n        }\n      })()\n    }\n  }, [config])\n\n  return {\n    isGitReady,\n    currentBranch,\n    isHistoryDirty,\n    checkoutTo,\n    revList,\n    gitErrors,\n    walkCommits,\n  }\n}\n\nexport default useGitUtils\n","export * from './gitUtils'\nexport { default as useGitUtils } from './useGitUtils'\n","import glob from 'glob'\nimport path from 'path\nimport { mergeAndDedupArrays, filterIgnoredFiles } from '../utils'\nimport { Config } from '../types'\nimport { getChangedFilesSinceRev } from '../git'\n\nconst removeDotSlash = (str: string): string => str.replace(/^\\.\\//, '')\n\nconst getFileList = async (\n  config: Config,\n  compare?: string,\n  globOption?: string\n): Promise<string[]> => {\n  const includedGlob = !!globOption ? [globOption] : config.include\n  \n  if (!!compare) {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const changedFiles = await getChangedFilesSinceRev(compare)\n        const ignoreDeletedfiles = changedFiles.filter(({ status }) => status === 'A' || status === 'M')\n        const allChanges = ignoreDeletedfiles.map((item) => item.filePath)\n        const files = filterIgnoredFiles(allChanges, config.exclude, includedGlob)\n        \n        resolve(files)\n      } catch (error) {\n        reject(error)\n      }\n    })\n  }\n\n  return new Promise((resolve, reject) => {\n    try {\n      const globOptions = { ignore: config.exclude, nodir: true }\n\n      const filesFromSource = includedGlob.map(\n        (globFilter) => glob.sync(globFilter, globOptions)\n      )\n\n      const files = mergeAndDedupArrays<string>(...filesFromSource).map(removeDotSlash)\n\n      resolve(files)\n    } catch (error) {\n      reject(error)\n    }\n  })\n}\n\nexport default getFileList","import minimatch from 'minimatch'\nimport { SanitizedFileRule, SanitizedEslintRule, Config } from '../config'\n\nconst doesMatchPath = ({ include = ['**/*'] }, file: string): boolean =>\n  include.filter((glob) =>\n    minimatch(file.replace('./', ''), glob.replace('./', ''))\n  ).length > 0\n\ntype RulesForFile = {\n  fileRules?: SanitizedFileRule[]\n  eslintRules?: SanitizedEslintRule[]\n}\n\nexport const getRulesForFile = (\n  options: Config,\n  filePath: string\n): RulesForFile => {\n  const rulesForFile: RulesForFile = {}\n\n  if (options.fileRules) {\n    rulesForFile.fileRules = options.fileRules.filter((rule) =>\n      doesMatchPath(rule, filePath)\n    )\n  }\n\n  if (options.eslintRules) {\n    rulesForFile.eslintRules = options.eslintRules.filter((rule) =>\n      doesMatchPath(rule, filePath)\n    )\n  }\n\n  return rulesForFile\n}\n\nconst filterRulesByTagAndId = (\n  rules: SanitizedFileRule[] | SanitizedEslintRule[],\n  ruleId: string,\n  tags: string[]\n) =>\n  rules\n    .filter((rule: SanitizedFileRule | SanitizedEslintRule) =>\n      ruleId ? ruleId === rule.id : true\n    )\n    .filter((rule: SanitizedFileRule | SanitizedEslintRule) =>\n      tags && tags.length > 0\n        ? tags.some((tag) => rule.tags.includes(tag))\n        : true\n    )\n\nexport const filtersRulesFromOptions = (\n  options: Config,\n  ruleId: string | null = null,\n  tags: string[] | null = null\n) => {\n  let { fileRules } = options\n  let { eslintRules } = options\n  const cleanTag = tags && tags.filter((tag) => !!tag)\n\n  if (ruleId || cleanTag?.length) {\n    fileRules = filterRulesByTagAndId(options.fileRules, ruleId, cleanTag)\n    eslintRules = filterRulesByTagAndId(options.eslintRules, ruleId, cleanTag)\n  }\n\n  return {\n    fileRules,\n    eslintRules,\n  }\n}\n","import escapeStringRegexp from 'escape-string-regexp-node'\nimport type { Config, BrokenRule } from '../types'\n\nconst findJsImportFrom =\n  (data) =>\n  (importee?: string, from?: string): 0 | 1 => {\n    const regexp = new RegExp(\n      `import [A-z0-9,\\\\s{]*${escapeStringRegexp(\n        importee\n      )}[A-z0-9,\\\\s}]* from '[A-z0-9.\\/]*${escapeStringRegexp(\n        from\n      )}[A-z0-9.\\/]*'`,\n      'gm'\n    )\n    const res = data.matchAll(regexp)\n    const resArr = Array.from(res, (m) => m[0])\n    return resArr.length > 0 ? 1 : 0\n  }\n\nconst countAll =\n  (data) =>\n  (str: string | RegExp): number => {\n    let regexp: RegExp\n\n    if (str instanceof RegExp) {\n      regexp = str\n    } else {\n      regexp = new RegExp(escapeStringRegexp(str), 'g')\n    }\n    const res = data.matchAll(regexp)\n    const resArr = Array.from(res, (m) => m[0])\n\n    return resArr.length\n  }\n\nconst findOne =\n  (data) =>\n  (str: string | RegExp): 0 | 1 => {\n    const count = countAll(data)(str)\n    return count > 0 ? 1 : 0\n  }\n\nconst findOneOf =\n  (data) =>\n  (matches: (string | RegExp)[]): 0 | 1 => {\n    let count = 0\n    let index = 0\n\n    while (count === 0 && index <= matches.length - 1) {\n      count = countAll(data)(matches[index])\n      index += 1\n    }\n\n    return count === 0 ? 0 : 1\n  }\n\nconst countAllOf =\n  (data) =>\n  (matches: (string | RegExp)[]): number => {\n    let count = 0\n    const index = 0\n\n    while (index <= matches.length - 1) {\n      count += countAll(data)(matches[index])\n    }\n\n    return count\n  }\n\nconst getFileRulesErrors = (\n  config: Config,\n  file: string,\n  data: string\n): BrokenRule[] => {\n  const utils = {\n    content: data,\n    file,\n    countAll: countAll(data),\n    findOne: findOne(data),\n    findOneOf: findOneOf(data),\n    countAllOf: countAllOf(data),\n    findJsImportFrom: findJsImportFrom(data),\n  }\n\n  return config.fileRules.reduce((acc, rule) => {\n    const nbErrors = rule.matchRule({ ...utils })\n\n    if (nbErrors > 0) {\n      acc.push({\n        ruleTitle: rule.title,\n        ruleId: rule.id,\n        occurences: nbErrors,\n      })\n    }\n    return acc\n  }, [])\n}\n\nexport default getFileRulesErrors\n","const getEslintRulesErrors = async (config, file, data, eslint) => {\n  let results\n  try {\n    results = await eslint.lintText(data, { warnIgnored: true })\n  } catch (err) {\n    results = []\n  }\n\n  const errors = results[0]?.messages\n\n  const containRuleIdMessage = (ruleId) =>\n    errors?.filter((err) => err.ruleId === ruleId).length ?? 0\n\n  const containMessageFromPlugin = (ruleId) => {\n    if (errors.length > 0) {\n      const nonNullError = errors\n        .filter((err) => err !== null && err.ruleId !== null)\n        .filter((err) => err.ruleId.startsWith(ruleId))\n\n      return nonNullError.length\n    }\n\n    return 0\n  }\n\n  const utils = {\n    containRuleIdMessage,\n    containMessageFromPlugin,\n    content: errors,\n    file,\n  }\n\n  return config.eslintRules.reduce((acc, rule) => {\n    const nbErrors = rule.matchESLintRule({ ...utils })\n\n    if (nbErrors > 0) {\n      acc.push({\n        ruleId: rule.id,\n        occurences: nbErrors,\n      })\n    }\n\n    return acc\n  }, [])\n}\n\nexport default getEslintRulesErrors\n","import fs from 'fs'\nimport { ESLint } from 'eslint'\nimport { getRulesForFile } from '../filters/filterRules'\nimport type { FileResults, BrokenRule, Config } from '../types'\nimport getfileRulesErrors from './getFileRulesErrors'\nimport getEslintRulesErrors from './getEslintRulesErrors'\nimport { truncateString, getConfigRuleById } from '../utils'\n\nconst updateResults = (\n  config: Config,\n  brokenRules: BrokenRule[],\n  fileResults,\n  ruleName\n) => {\n  const updatedFileResults = {\n    ...fileResults,\n  }\n\n  if (brokenRules.length > 0) {\n    brokenRules.forEach(({ ruleId, occurences }) => {\n      const rule = getConfigRuleById(config, ruleId)\n      const ruleTotalSore = rule.debtScore * occurences\n\n      updatedFileResults.brokenRules.push({\n        ruleTitle: rule.title,\n        ruleId,\n        occurences,\n        ruleTotalSore,\n      })\n\n      updatedFileResults.totalScore += ruleTotalSore\n    })\n  }\n  return updatedFileResults\n}\n\nconst runFileChecks = async (\n  config: Config,\n  filePath: string,\n  eslint: ESLint | null\n): Promise<FileResults> => {\n  let fileResults: FileResults = {\n    filePath,\n    fileShortPath: truncateString(filePath, 80),\n    brokenRules: [],\n    totalScore: 0,\n  }\n\n  if (config.eslintRules?.length === 0 && config.fileRules?.length === 0) {\n    return fileResults\n  }\n\n  let data = ''\n\n  try {\n    data = fs.readFileSync(filePath).toString()\n  } catch (error) {\n    console.error(`error while reading file ${filePath} \\n ${error.message}`)\n    data = ''\n  }\n\n  if (config.fileRules?.length > 0) {\n    const fileRulesResults = getfileRulesErrors(config, filePath, data)\n    fileResults = updateResults(\n      config,\n      fileRulesResults,\n      fileResults,\n      'fileRules'\n    )\n  }\n\n  if (config.eslintRules?.length > 0 && eslint) {\n    const eslintResults = await getEslintRulesErrors(\n      config,\n      filePath,\n      data,\n      eslint\n    )\n\n    fileResults = updateResults(\n      config,\n      eslintResults,\n      fileResults,\n      'eslintRules'\n    )\n  }\n\n  return fileResults\n}\n\nconst getFileResult = async (\n  config: Config,\n  file: string,\n  incrementCounter: () => void,\n  eslint: ESLint | null\n): Promise<FileResults> => {\n  const rulesForFile = getRulesForFile(config, file)\n  const fileResult = await runFileChecks(\n    {\n      ...config,\n      ...rulesForFile,\n    },\n    file,\n    eslint\n  )\n\n  incrementCounter()\n\n  return fileResult\n}\n\nexport default getFileResult\n","import { ESLint } from 'eslint'\nimport getFileResult from './getFileResult'\nimport { filtersRulesFromOptions } from '../filters/filterRules'\nimport type { FileResults, Config } from '../types'\n\nconst checkFileList = async (\n  fileList: string[],\n  config: Config,\n  rule: string,\n  tags: string[],\n  increment: () => void\n): Promise<FileResults[]> => {\n  const filteredRules = filtersRulesFromOptions(config, rule, tags)\n\n  const fileListConfig = {\n    ...config,\n    ...filteredRules,\n  }\n\n  let eslint: ESLint | null = null\n\n  if (config.eslintRules?.length > 0) {\n    eslint = new ESLint({\n      useEslintrc: false,\n      baseConfig: config.eslintConfig,\n    })\n  }\n\n  const getFilesResults = fileList.map((file) =>\n    getFileResult(fileListConfig, file, increment, eslint)\n  )\n\n  const results = await Promise.all([...getFilesResults])\n\n  return results\n}\n\nexport default checkFileList\n","const createTable = (data) => `\n|File|Prev|Current|Trend|\n|--|--|--|--|\n${data\n  .map((file) => `|${file.file}|${file.rev}|${file.current}|${file.trend}|`)\n  .join('\\n')}\n`\n\nconst createFileTable = (fileResult) => `\n<br/>\n<br/>\n<b>${fileResult.fileShortPath}</b><br/>\n<br/>\n\n|Broken rule|score|\n|--|--|\n${fileResult.brokenRules\n  .map((rule) => `|🚫 ${rule.ruleTitle}|${rule.ruleTotalSore}|`)\n  .join('\\n')}\n`\n\nconst getFileScoreComparaison = (data) => {\n  let result = ''\n  if (data.noChangesFiles.length > 0) {\n    result += `\n### 💤 Files with same debt :\n\n${createTable(data.noChangesFiles)}\n\n`\n  }\n\n  if (data.lessDeptFiles.length > 0) {\n    result += `\n### ✅ Files with less debt :\n\n${createTable(data.lessDeptFiles)}\n\n`\n  }\n\n  if (data.moreDeptFiles.length > 0) {\n    result += `\n### ❌ Files with more debt :\n\n${createTable(data.moreDeptFiles)}\n\n`\n  }\n\n  return result\n}\n\nconst getConclusions = (data) => {\n  if (data.totalScores.solde > 0) {\n    return `### ❌ Debt score for modified files increased by ${data.totalScores.solde} [^1]`\n  }\n  if (data.totalScores.solde < 0) {\n    return `### ✅ Debt score for modified files decreased by ${data.totalScores.solde} [^1]`\n  }\n\n  return '### 💤 Debt score for modified files did not change [^1]'\n}\n\nconst getMotivationSpeatch = (data) => {\n  if (data.totalScores.solde > 0) {\n    return `Maybe try something else 😭`\n  }\n  if (data.totalScores.solde < 0) {\n    return `You did great ! 🎉`\n  }\n\n  return 'Neither good or bad, I guess 🤷🏽'\n}\n\nconst compareMarkDownReport = (data) => `\n## Debt collector report\n\n${getConclusions(data)}\n${getMotivationSpeatch(data)}\n\n|Previous debt|Current debt|trend|\n|--|--|--|\n|${data.totalScores.rev.toString()}|${data.totalScores.cur.toString()}|${data.totalScores.solde.toString()}|\n\n<details>\n<summary>\n  <h3>Modified files • see scores before and after</h3>\n</summary>\n<div>\n\n${getFileScoreComparaison(data)}\n\n<br/>\n<br/>\n</div>\n</details>\n\n\n<details>\n<summary>\n  <h3>Help us improve code quality! Here are some ideas for you</h3>\n</summary>\n<div>\n\n${data.currentResults\n  .filter((res) => res.totalScore !== 0)\n  .map(createFileTable)\n  .join('\\n')}\n\n<br/>\n<br/>\n</div>\n</details>\n\n[^1]: Scores based on modified files only <br/>The report may not be accurate if your branch is not up to date with the base branch.\n`\n\nexport default compareMarkDownReport\n","import React, { useEffect } from 'react';\nimport Table from 'ink-table';\nimport { Text, Box } from 'ink';\nimport fs from 'fs';\n\nimport compareHtmlReport from '../lib/reporters/compareMarkdownReport';\nimport { truncateString } from '../lib/utils';\nimport { CheckResults, FileResults } from '../lib/types';\n\nconst cachePath = `${process.cwd()}/node_modules/.cache/debt-collector`;\nconst resultPath = `${cachePath}/report.html`;\n\nconst formatResults = (results: FileResults[], limitTop: number ) => {\n  let formatedResult = results.filter((result) => result.totalScore > 0);\n  const impactedFilesNumber = formatedResult.length\n  const totalDeptScore = formatedResult.reduce((acc, res) => acc + res.totalScore, 0);\n\n  if (limitTop) {\n    formatedResult = formatedResult\n      .sort((a, b) => b.totalScore - a.totalScore)\n      .filter((_item, index) => index < limitTop);\n  }\n\n  return {\n    formatedResult,\n    totalDeptScore,\n    impactedFilesNumber,\n  };\n};\n\ninterface ResultsProps {\n  results: CheckResults\n  limitTop: number \n}\nexport const Results = ({ results, limitTop }: ResultsProps )=> {\n  const {\n    formatedResult,\n    totalDeptScore,\n    impactedFilesNumber\n  } = formatResults(results.results, limitTop);\n\n  return (\n    <>\n      {formatedResult.length > 0 && formatedResult.map((result) => (\n        <Box key={result.fileShortPath} flexDirection=\"column\" marginTop={1}>\n          <Text bold color=\"red\" underline>{result.fileShortPath}</Text>\n          <Table data={result.brokenRules.map(\n            ({ruleTitle, occurences, ruleTotalSore}) => ({\n              title: ruleTitle,\n              nb: occurences,\n              score: ruleTotalSore\n            }))}/>\n          <Text bold color=\"red\">\n            Total Debt Score:{' '}\n            {result.totalScore}\n          </Text>\n        </Box>\n      ))}\n      <Box marginTop={1}>\n        <Text bold backgroundColor=\"#880000\" color=\"white\">\n          {' '}\n          Debt Score:{' '}\n          {totalDeptScore}\n          {' '}\n          / Impacted files:{' '}\n          {impactedFilesNumber}\n        </Text>\n      </Box>\n    </>\n  );\n}\n\nexport function ResultsFileOnly({ results, limitTop }) {\n  const {\n    formatedResult,\n    totalDeptScore,\n    impactedFilesNumber\n  } = formatResults(results.results, limitTop);\n\n\n  let displayResults = formatedResult;\n\n  if (limitTop) {\n    displayResults = formatedResult\n      .sort((a, b) => b.totalScore - a.totalScore)\n      .filter((_item, index) => index < limitTop);\n  }\n\n  return (\n    <>\n      <Box marginTop={1} />\n      {formatedResult.length > 0 && (\n      <Table data={displayResults.map(({ fileShortPath, totalScore }) => ({ file: fileShortPath, score: totalScore }))} />\n      )}\n      <Box marginTop={1}>\n        <Text bold backgroundColor=\"#880000\" color=\"white\">\n          {' '}\n          Debt Score:{' '}\n          {totalDeptScore}\n          {' '}\n          / Impacted files:{' '}\n          {impactedFilesNumber}\n        </Text>\n      </Box>\n    </>\n  );\n}\n\nconst filterNoMatch = (results, initialConfig: Config) => {\n  const allRules = [\n    ...initialConfig.fileRules.map(({ id, title }) => ({ id, title })),\n    ...initialConfig.eslintRules.map(({ id, title }) => ({ id, title })),\n  ];\n\n  const allFilesRules = [].concat.apply([], results.map((file) => file.rules.map(({ id }) => id)));\n  const existingRules = Array.from(new Set([...allFilesRules]));\n\n  const filteredRules = allRules.filter(({ id }) => !existingRules.includes(id));\n\n  return {\n    notMatchRules: filteredRules,\n    rulesCount: allRules.length,\n    existingRulesCount: existingRules.length,\n  };\n};\n\nexport function ResultsNoMatchRule({ results, initialConfig }) {\n  const { notMatchRules, rulesCount } = filterNoMatch(results, initialConfig);\n\n  return (\n    <>\n      <Box marginTop={1} />\n      {notMatchRules.length > 0 && (\n      <Table data={notMatchRules} />\n      )}\n      <Box marginTop={1}>\n        <Text bold backgroundColor=\"#880000\" color=\"white\">\n          Nb of rules with no match :\n          {' '}\n          {notMatchRules.length}\n          {' '}\n          /\n          {rulesCount}\n        </Text>\n      </Box>\n    </>\n  );\n}\n\nexport function ResultsCompare({ results, currentResults, outputHtml }) {\n  const tableResults = Object.keys(results).map((fileName) => {\n    const result = results[fileName];\n    return {\n      file: truncateString(fileName, 60),\n      rev: result.rev,\n      current: result.current,\n      trend: result.tendency,\n    };\n  }).filter((file) => !(file.rev === 0 && file.current === 0));\n\n  console.log(currentResults);\n  \n\n  const totalScores = tableResults.reduce((acc, res) => {\n    const revScore = res.rev + acc.rev;\n    const currentScore = res.current + acc.cur;\n\n    return {\n      rev: revScore,\n      cur: currentScore,\n      solde: currentScore - revScore,\n    };\n  }, {\n    rev: 0,\n    cur: 0,\n    solde: 0,\n  });\n\n  const noChangesFiles = tableResults\n    .filter((item) => item.trend === 0)\n    .map((file) => ({\n      ...file,\n      trend: '=',\n    }));\n\n  const moreDeptFiles = tableResults\n    .filter((item) => item.trend > 0)\n    .map((file) => ({\n      ...file,\n      trend: `▲ ${file.trend}`,\n    }));\n\n  const lessDeptFiles = tableResults\n    .filter((item) => item.trend < 0)\n    .map((file) => ({\n      ...file,\n      trend: `▼ ${file.trend}`,\n    }));\n\n  const resultColor = (nb) => {\n    if (nb > 0) return 'red';\n    if (nb < 0) return 'green';\n    return 'grey';\n  };\n\n  useEffect(() => {\n    if (outputHtml) {\n      setTimeout(() => {\n        const html = compareHtmlReport({\n          currentResults,\n          noChangesFiles,\n          moreDeptFiles,\n          lessDeptFiles,\n          resultColor,\n          totalScores,\n        });\n\n        fs.mkdir(cachePath, { recursive: true }, (err) => {\n          if (err) throw err;\n          fs.writeFileSync(resultPath, html);\n        });\n      }, 1000);\n    }\n  }, []);\n\n  return (\n    <>\n      <Box marginTop={1} />\n      {noChangesFiles.length > 0 && (\n      <Box marginTop={1} flexDirection=\"column\">\n        <Text underline bold color=\"grey\">Files with no changes in debt score</Text>\n        <Table data={noChangesFiles} />\n      </Box>\n      )}\n      {lessDeptFiles.length > 0 && (\n      <Box marginTop={1} flexDirection=\"column\">\n        <Text underline bold color=\"green\">Files with less debt</Text>\n        <Table data={lessDeptFiles} />\n      </Box>\n      )}\n      {moreDeptFiles.length > 0 && (\n      <Box marginTop={1} flexDirection=\"column\">\n        <Text underline bold color=\"red\">Files with more debt</Text>\n        <Table data={moreDeptFiles} />\n      </Box>\n      )}\n      <Box marginTop={1}>\n        <Box paddingLeft={1} paddingRight={1} borderStyle=\"round\" flexDirection=\"column\">\n          <Text>\n            REVISION :\n            {' '}\n            <Text>{totalScores.rev.toString()}</Text>\n          </Text>\n        </Box>\n        <Box paddingLeft={1} paddingRight={1} borderStyle=\"round\" flexDirection=\"column\">\n          <Text>\n            CURRENT :\n            {' '}\n            <Text>{totalScores.cur.toString()}</Text>\n          </Text>\n\n        </Box>\n        <Box paddingLeft={1} paddingRight={1} borderStyle=\"round\" flexDirection=\"column\">\n          <Text bold color={resultColor(totalScores.solde)} dimmed>\n            DIFF :\n            {' '}\n            {totalScores.solde.toString()}\n          </Text>\n        </Box>\n      </Box>\n    </>\n  );\n}\n","import path from 'path'\n\nconst getConfigPath = (config) =>\n  config\n    ? path.relative(process.cwd(), config)\n    : path.relative(process.cwd(), './debt-collector.config.js')\n\nexport default getConfigPath\n","import type { ValidateConfigReturn } from './validateConfig'\nimport { useArrayForStringKeys } from '../utils'\n\nconst initialiseRules = (\n  validatedConfig: ValidateConfigReturn\n): ValidateConfigReturn => {\n  const returnValues = validatedConfig\n  const config = returnValues.sanitizedConfig\n\n  returnValues.sanitizedConfig = useArrayForStringKeys(\n    ['include', 'exclude'],\n    config\n  )\n\n  const defaultFileRuleConfig = {\n    include: '**/*',\n    matchRule: () => 1,\n  }\n\n  const defaultEslintRuleConfig = {\n    include: '**/*',\n  }\n\n  let fileRules = null\n\n  if (config.fileRules?.length > 0) {\n    fileRules = config.fileRules.map((rule) => {\n      let sanitizedRule = {\n        ...defaultFileRuleConfig,\n        ...rule,\n      }\n\n      sanitizedRule = useArrayForStringKeys(\n        ['include', 'exclude', 'tags'],\n        sanitizedRule\n      )\n\n      return sanitizedRule\n    })\n  }\n\n  let eslintRules = null\n\n  if (config.eslintRules?.length > 0) {\n    eslintRules = config.eslintRules.map((rule) => {\n      let sanitizedRule = {\n        ...defaultEslintRuleConfig,\n        ...rule,\n      }\n\n      sanitizedRule = useArrayForStringKeys(\n        ['include', 'exclude', 'tags'],\n        sanitizedRule\n      )\n\n      return sanitizedRule\n    })\n  }\n\n  if (fileRules) {\n    returnValues.sanitizedConfig.fileRules = fileRules\n  }\n\n  if (eslintRules) {\n    returnValues.sanitizedConfig.eslintRules = eslintRules\n  }\n\n  return returnValues\n}\n\nexport default initialiseRules\n","import path from 'path'\nimport { Config, UserConfig } from './config'\nimport sanitizeConfig from './sanitizeConfig'\n\nexport type ValidateConfigReturn = {\n  isConfigValid: boolean\n  sanitizedConfig: Config | null\n  configErrors: string[]\n  userConfig: UserConfig | null\n}\n\nconst validateConfig = async (configPath): Promise<ValidateConfigReturn> => {\n  let config: undefined | Config\n\n  const returnValues = {\n    isConfigValid: true,\n    sanitizedConfig: null,\n    userConfig: null,\n    configErrors: [],\n  }\n\n  try {\n    const importedConfig = await import(`${process.cwd()}/${configPath}`)\n    config = importedConfig.default\n    returnValues.sanitizedConfig = config\n    returnValues.userConfig = config\n  } catch (e) {\n    returnValues.isConfigValid = false\n    returnValues.configErrors.push(\n      `Impossible to load a valid config file at ${configPath}, create a config file or provide a path to a valid config using the \"--config\" flag`\n    )\n    return returnValues\n  }\n\n  const hasIncludeKey = !!config.include\n  const hasFileRules = !!config.fileRules\n  const hasEslintRules = !!config.eslintRules\n  const hasEslintConfigPath = !!config.eslintConfigPath\n  const hasSomeRules = hasFileRules || hasEslintRules\n\n  if (!hasIncludeKey) {\n    returnValues.isConfigValid = false\n    returnValues.configErrors.push(\n      'Provide a \"include\" key with a glob pattern in your configuration ex: \"./**/*\"'\n    )\n  }\n\n  if (!hasSomeRules) {\n    returnValues.isConfigValid = false\n    returnValues.configErrors.push(\n      'Your config does not have any rules, please create \"fileRules\" or/and \"eslintRules\"'\n    )\n  }\n\n  if (hasEslintRules && !hasEslintConfigPath) {\n    returnValues.isConfigValid = false\n    returnValues.configErrors.push(\n      'You provided \"eslintRules\" but no path to an eslint config file'\n    )\n  }\n\n  if (!hasEslintRules && hasEslintConfigPath) {\n    returnValues.isConfigValid = false\n    returnValues.configErrors.push(\n      'You provided a a path to an eslint config but no \"eslintRules\"'\n    )\n  }\n\n  // TODO : validate individual rules\n  // - unique ID\n  // - include either an include key or a matchRule\n\n  if (hasEslintConfigPath && hasEslintRules) {\n    try {\n      // eslint-disable-next-line global-require, import/no-dynamic-require\n      returnValues.sanitizedConfig.eslintConfig = require(path.resolve(\n        process.cwd(),\n        config.eslintConfigPath\n      ))\n    } catch (e) {\n      returnValues.isConfigValid = false\n      returnValues.configErrors.push(\n        'Impossible to load the eslint config file'\n      )\n    }\n  }\n\n  return sanitizeConfig(returnValues)\n}\n\nexport default validateConfig\n","import { useEffect, useState } from 'react'\nimport { UserConfig, Config } from '../types'\nimport getConfigPath from './getConfigPath'\nimport validateConfig from './validateConfig'\n\nconst useValidatedConfig = (\n  config?: string\n): {\n  isConfigValid: boolean | null\n  sanitizedConfig: Config | null\n  configErrors: string[] | null\n  userConfig: UserConfig | null\n} => {\n  const [isConfigValid, setIsConfigValid] = useState<boolean | null>(null)\n  const [sanitizedConfig, setSanitizedConfig] = useState<Config | null>(null)\n  const [configErrors, setConfigErrors] = useState<string[] | null>(null)\n  const [userConfig, setUserConfig] = useState<UserConfig | null>(null)\n\n  useEffect(() => {\n    ;(async () => {\n      const configPath = getConfigPath(config)\n      try {\n        const {\n          isConfigValid: isValid,\n          sanitizedConfig: cleanConfig,\n          configErrors: errors,\n          userConfig: baseConfig,\n        } = await validateConfig(configPath)\n\n        setUserConfig(baseConfig)\n        setSanitizedConfig(cleanConfig)\n        setIsConfigValid(isValid)\n        setConfigErrors(errors)\n      } catch (e) {\n        setIsConfigValid(false)\n        setConfigErrors([e.message])\n      }\n    })()\n  }, [])\n\n  return {\n    isConfigValid,\n    sanitizedConfig,\n    configErrors,\n    userConfig,\n  }\n}\n\nexport default useValidatedConfig\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Text } from 'ink';\nimport { TaskList, Task } from 'ink-task-list';\nimport getFilesList from '../../lib/filters/getFilesList';\nimport checkFileList from '../../lib/results/checkFileList';\nimport { ResultsCompare } from '../../components/ResultReporter';\nimport useValidatedConfig from '../../lib/config/useValidatedConfig';\nimport { useGitUtils } from '../../lib/git';\nimport { FileResults } from '../../lib/types';\n\nfunction Compare({\n  revision = null,\n  rule = null,\n  tags = null,\n  config = null,\n \tinclude = null,\n  htmlReport = false,\n}) {\n  const [results, setResults] = useState<FileResults[]|null>(null);\n  const [fileList, setFileList] = useState(null);\n  const [checkedFileCount, setCheckedFileCount] = useState(0);\n  const [revisionResults, setRevisionResults] = useState<FileResults[]|null>(null);\n  const [checkedRevisionFileCount, setRevisionCheckedFileCount] = useState(0);\n\n  const [finalResult, setFinalResult] = useState(null);\n\n  const {\n    isConfigValid,\n    sanitizedConfig,\n  } = useValidatedConfig(config);\n\n  const { isGitReady, checkoutTo, currentBranch }  = useGitUtils(sanitizedConfig);\n\n  useEffect(() => {\n    (async () => {\n      if (isConfigValid && isGitReady) {\n        const fileListResult = await getFilesList(sanitizedConfig, revision, include);\n        setFileList(fileListResult);\n      }\n    })();\n  }, [isConfigValid, isGitReady]);\n\n  useEffect(() => {\n    (async () => {\n      if (fileList !== null) {\n        const incrementFn = () => setCheckedFileCount((prevCount) => prevCount + 1);\n        const checkResult = await checkFileList(fileList, sanitizedConfig, rule, tags, incrementFn);\n        setResults(checkResult);\n      }\n    })();\n  }, [fileList]);\n\n  useEffect(() => {\n    (async () => {\n      if (results !== null) {\n        try {\n          await checkoutTo(revision);\n        } catch (e) {\n          console.log(e);\n        }\n        const incrementFn = () => setRevisionCheckedFileCount((prevCount) => prevCount + 1);\n        const result = await checkFileList(fileList, sanitizedConfig, rule, tags, incrementFn);\n        setRevisionResults(result);\n      }\n    })();\n  }, [results]);\n\n  useEffect(() => {\n    (async () => {\n      if (revisionResults !== null) {\n        try {\n          await checkoutTo(currentBranch);\n        } catch (e) {\n          console.log(err);\n        }\n\n        const finalResults = Object.assign({}, ...fileList.map((fileName) => {\n          const currentScore = results.find(({ filePath }) => filePath === fileName).totalScore;\n          const revisionScore = revisionResults.find(({ filePath }) => filePath === fileName).totalScore;\n\n          const tendency = currentScore - revisionScore;\n\n          return {\n            [fileName]: {\n              rev: revisionResults.find(({ filePath }) => filePath === fileName).totalScore,\n              current: results.find(({ filePath }) => filePath === fileName).totalScore,\n              tendency,\n            },\n          };\n        }));\n\n        setFinalResult(finalResults);\n      }\n    })();\n  }, [revisionResults]);\n\n  useEffect(() => {\n    (async () => {\n      if (finalResult !== null) {\n        await checkoutTo(currentBranch);\n      }\n    })();\n  }, [finalResult]);\n\n  return (\n    <>\n      <TaskList>\n        <Task\n          state={isConfigValid === null ? 'loading' : isConfigValid ? 'success' : 'error'}\n          label=\"validating configuration\"\n          status={isConfigValid === null ? 'checking configuration' : isConfigValid ? 'success' : 'error'}\n        />\n        <Task\n          state={fileList === null ? 'loading' : 'success'}\n          label=\"defining file to check\"\n          status={fileList === null ? null : `${fileList.length} files`}\n        />\n        <Task\n          state={results === null ? 'loading' : 'success'}\n          label=\"checking current files\"\n          status={`${checkedFileCount}/${fileList === null ? '?' : fileList.length} files`}\n        />\n        <Task\n          state={finalResult === null ? 'loading' : 'success'}\n          label={`checking and comparing with ${revision} files`}\n          status={`${checkedRevisionFileCount}/${fileList === null ? '?' : fileList.length} files`}\n        />\n      </TaskList>\n\n      {isConfigValid === false && (\n      <Text color=\"red\">Error during config</Text>\n      )}\n\n      { finalResult !== null && <ResultsCompare results={finalResult} currentResults={results} outputHtml={htmlReport} />}\n    </>\n  );\n}\n\nCompare.propTypes = {\n  revision: PropTypes.string.isRequired,\n \tinclude: PropTypes.string,\n  rule: PropTypes.string,\n  tags: PropTypes.array,\n  config: PropTypes.string,\n  htmlReport: PropTypes.bool,\n};\n\nCompare.shortFlags = {\n  rule: 'r',\n  tags: 't',\n \tinclude: 'g',\n  config: 'c',\n};\n\nexport default Compare;\n"]}